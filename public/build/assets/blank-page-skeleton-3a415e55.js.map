{"version":3,"file":"blank-page-skeleton-3a415e55.js","sources":["../../../common/resources/client/utils/urls/remove-protocol.ts","../../../resources/client/projects/project-link.tsx","../../../common/resources/client/icons/material/KeyboardArrowRight.tsx","../../../resources/client/editor/use-account-usage.ts","../../../common/resources/client/ui/tabs/tabs-context.tsx","../../../common/resources/client/ui/tabs/tabs.tsx","../../../common/resources/client/ui/tabs/tab-line.tsx","../../../common/resources/client/ui/tabs/tab-list.tsx","../../../common/resources/client/ui/tabs/tab.tsx","../../../common/resources/client/ui/tabs/tab-panels.tsx","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/is-subdomain.ts","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/domain-progress-indicator.tsx","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/info-step.tsx","../../../common/resources/client/ui/forms/toggle/switch.tsx","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/host-step.tsx","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/connect-domain-step.tsx","../../../common/resources/client/custom-domains/datatable/requests/use-validate-domain-dns.ts","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/validation-failed-step.tsx","../../../common/resources/client/custom-domains/datatable/requests/use-authorize-domain-connect.ts","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/custom-domains/datatable/requests/use-connect-domain.ts","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/use-connect-domain-stepper.ts","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/finalize-step.tsx","../../../common/resources/client/icons/material/KeyboardArrowLeft.tsx","../../../common/resources/client/custom-domains/datatable/connect-domain-dialog/connect-domain-dialog.tsx","../../../common/resources/client/ui/section-helper.tsx","../../../common/resources/client/icons/material/Add.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/chip-list.tsx","../../../common/resources/client/ui/forms/input-field/input.tsx","../../../common/resources/client/ui/images/avatar.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/resources/client/ui/forms/input-field/chip-field/chip-field.tsx","../../../common/resources/client/icons/material/Delete.tsx","../../../resources/client/editor/utils/create-script-el.ts","../../../resources/client/editor/utils/create-link-el.ts","../../../common/resources/client/utils/string/random-string.ts","../../../resources/client/editor/utils/seo-tags.ts","../../../resources/client/editor/utils/parse-html-into-document.ts","../../../resources/client/projects/blank-page-skeleton.ts"],"sourcesContent":["export function removeProtocol(url: string) {\n  if (!url) return url;\n  return url.replace(/(^\\w+:|^)\\/\\//, '');\n}\n","import {EditorProject, Project} from '@app/dashboard/project';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Link, LinkProps} from 'react-router-dom';\nimport {ReactNode, useMemo} from 'react';\nimport clsx from 'clsx';\nimport {removeProtocol} from '@common/utils/urls/remove-protocol';\n\ninterface Props extends Omit<LinkProps, 'to'> {\n  project: Project;\n  className?: string;\n  children?: ReactNode;\n  color?: 'primary' | 'inherit';\n}\nexport function ProjectLink({\n  project,\n  className,\n  children,\n  color = 'inherit',\n  ...linkProps\n}: Props) {\n  const finalUri = useMemo(() => {\n    return getProjectPreviewUrl(project);\n  }, [project]);\n\n  return (\n    <Link\n      {...linkProps}\n      className={clsx(\n        color === 'primary'\n          ? 'text-primary hover:text-primary-dark'\n          : 'text-inherit',\n        'overflow-x-hidden overflow-ellipsis outline-none transition-colors hover:underline focus-visible:underline',\n        className,\n      )}\n      to={finalUri}\n    >\n      {children ?? getProjectPreviewUrl(project, {removeProtocol: true})}\n    </Link>\n  );\n}\n\nexport function getProjectPreviewUrl(\n  project: Project,\n  options?: {removeProtocol?: boolean},\n): string {\n  let url = `${getBootstrapData().settings.base_url}/sites/${\n    project.slug\n  }`.replace(/\\/$/, '');\n  if (options?.removeProtocol) {\n    url = removeProtocol(url);\n  }\n  return url;\n}\n\nexport function getProjectSubdomainUrl(\n  project: Project,\n  options?: {removeProtocol?: boolean},\n) {\n  const base = getBootstrapData().settings.base_url;\n  // strip pathname from url if generating subdomain\n  const parsed = new URL(base);\n  let url = `${parsed.protocol}//${project.slug}.${parsed.host}`.replace(\n    /\\/$/,\n    '',\n  );\n  if (options?.removeProtocol) {\n    url = removeProtocol(url);\n  }\n  return url;\n}\n\nexport function getProjectImageUrl(project: Project) {\n  return `${getProjectEditorUrl(project)}/thumbnail.png?ts=${\n    project.updated_at\n  }`;\n}\n\nexport function getProjectEditorUrl(\n  project: Project | EditorProject,\n  options?: {relative?: boolean},\n): string {\n  const p = 'model' in project ? project.model : project;\n  const uri = `projects/${p.user_id}/${p.uuid}/`;\n\n  if (options?.relative) return uri;\n\n  return `${getBootstrapData().settings.base_url}/storage/${uri}`;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const KeyboardArrowRightIcon = createSvgIcon(\n  <path d=\"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n, 'KeyboardArrowRightOutlined');\n","import {apiClient, queryClient} from '@common/http/query-client';\nimport {useQuery} from '@tanstack/react-query';\nimport {PolicyFailReason} from '@common/billing/upgrade/policy-fail-reason';\n\ninterface ResourceStatus {\n  allowed: boolean;\n  failReason?: PolicyFailReason;\n}\n\ninterface ResourceUsage {\n  used: number;\n  total: number;\n  create: ResourceStatus;\n  update: ResourceStatus;\n  delete: ResourceStatus;\n}\n\ninterface AiUsage {\n  hasPermission: boolean;\n  used: number;\n  total: number;\n  failReason?: PolicyFailReason;\n}\n\ninterface Response {\n  ai: {\n    text: AiUsage;\n    images: AiUsage;\n  };\n  projects: ResourceUsage & {\n    customCode: boolean;\n    download: boolean;\n    export: boolean;\n  };\n  custom_domains: ResourceUsage;\n  uploads: {\n    used: number;\n    total: number;\n  };\n}\n\nexport function useAccountUsage() {\n  return useQuery({\n    queryKey: ['account-usage'],\n    queryFn: () => fetchUsage(),\n  });\n}\n\nexport function reloadAccountUsage() {\n  return queryClient.invalidateQueries({\n    queryKey: ['account-usage'],\n  });\n}\n\nfunction fetchUsage() {\n  return apiClient\n    .get<Response>(`account/usage`)\n    .then(response => response.data);\n}\n","import React, {RefObject} from 'react';\n\nexport interface TabsContext {\n  selectedTab: number;\n  setSelectedTab: (newTab: number) => void;\n  tabsRef: RefObject<HTMLElement[]>;\n  size: 'sm' | 'md';\n  isLazy?: boolean;\n  id: string;\n}\n\nexport const TabContext = React.createContext<TabsContext>(null!);\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useControlledState} from '@react-stately/utils';\nimport {TabContext, TabsContext} from './tabs-context';\nimport {TabListProps} from './tab-list';\nimport {TabPanelsProps} from './tab-panels';\n\nexport interface TabsProps {\n  children: [ReactElement<TabListProps>, ReactElement<TabPanelsProps>];\n  size?: 'sm' | 'md';\n  className?: string;\n  selectedTab?: number;\n  defaultSelectedTab?: number;\n  onTabChange?: (newTab: number) => void;\n  isLazy?: boolean;\n  overflow?: string;\n}\n\nexport function Tabs(props: TabsProps) {\n  const {\n    size = 'md',\n    children,\n    className,\n    isLazy,\n    overflow = 'overflow-hidden',\n  } = props;\n\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\n  const id = useId();\n\n  const [selectedTab, setSelectedTab] = useControlledState(\n    props.selectedTab,\n    props.defaultSelectedTab || 0,\n    props.onTabChange\n  );\n\n  const ContextValue: TabsContext = useMemo(() => {\n    return {\n      selectedTab,\n      setSelectedTab,\n      tabsRef,\n      size,\n      isLazy,\n      id,\n    };\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\n\n  return (\n    <TabContext.Provider value={ContextValue}>\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\n    </TabContext.Provider>\n  );\n}\n","import React, {useContext, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {TabContext} from './tabs-context';\n\ninterface TabLineStyle {\n  width?: string;\n  transform?: string;\n  className?: string;\n}\n\nexport function TabLine() {\n  const {tabsRef, selectedTab} = useContext(TabContext);\n  const [style, setStyle] = useState<TabLineStyle>({\n    width: undefined,\n    transform: undefined,\n    className: undefined,\n  });\n\n  useLayoutEffect(() => {\n    if (selectedTab != null && tabsRef.current) {\n      const el = tabsRef.current[selectedTab];\n      if (!el) return;\n\n      setStyle(prevState => {\n        return {\n          width: `${el.offsetWidth}px`,\n          transform: `translateX(${el.offsetLeft}px)`,\n          // disable initial transition for tabline\n          className: prevState.width === undefined ? '' : 'transition-all',\n        };\n      });\n    }\n  }, [setStyle, selectedTab, tabsRef]);\n\n  return (\n    <div\n      className={clsx(\n        'absolute bottom-0 left-0 h-2 bg-primary',\n        style.className\n      )}\n      role=\"presentation\"\n      style={{width: style.width, transform: style.transform}}\n    />\n  );\n}\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FocusScope} from '@react-aria/focus';\nimport {TabProps} from './tab';\nimport {TabLine} from './tab-line';\n\nexport interface TabListProps {\n  children: ReactNode;\n  // center tabs within tablist\n  center?: boolean;\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\n  expand?: boolean;\n  className?: string;\n}\nexport function TabList({children, center, expand, className}: TabListProps) {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <FocusScope>\n      <div\n        className={clsx(\n          // hide scrollbar completely on mobile, show compact one on desktop\n          'flex relative max-w-full overflow-auto border-b max-sm:hidden-scrollbar md:compact-scrollbar',\n          className\n        )}\n        role=\"tablist\"\n        aria-orientation=\"horizontal\"\n      >\n        {childrenArray.map((child, index) => {\n          if (isValidElement<TabProps>(child)) {\n            return cloneElement<TabProps>(child, {\n              index,\n              className: clsx(\n                child.props.className,\n                expand && 'flex-auto',\n                center && index === 0 && 'ml-auto',\n                center && index === childrenArray.length - 1 && 'mr-auto'\n              ),\n            });\n          }\n          return null;\n        })}\n        <TabLine />\n      </div>\n    </FocusScope>\n  );\n}\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\nimport clsx from 'clsx';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TabContext} from './tabs-context';\nimport {LinkProps} from 'react-router-dom';\n\nexport interface TabProps {\n  className?: string;\n  index?: number;\n  children: ReactNode;\n  isDisabled?: boolean;\n  padding?: string;\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\n  to?: LinkProps['to'];\n  relative?: LinkProps['relative'];\n  replace?: LinkProps['replace'];\n  width?: string;\n}\nexport function Tab({\n  index,\n  className,\n  isDisabled,\n  children,\n  padding: paddingProp,\n  elementType = 'button',\n  to,\n  relative,\n  width = 'min-w-min',\n}: TabProps) {\n  const {\n    selectedTab,\n    setSelectedTab,\n    tabsRef,\n    size = 'md',\n    id,\n  } = useContext(TabContext);\n  const isSelected = index === selectedTab;\n  const focusManager = useFocusManager();\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\n\n  const mergedClassname = clsx(\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\n    width,\n    textColor({isDisabled, isSelected}),\n    className,\n    size === 'md' && `${padding} h-48`,\n    size === 'sm' && `${padding} h-32`,\n    isDisabled && 'pointer-events-none',\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        focusManager?.focusNext();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const tabIndex = isSelected ? 0 : -1;\n  const Element = elementType;\n\n  return (\n    <Element\n      disabled={isDisabled}\n      id={`${id}-${index}-tab`}\n      aria-controls={`${id}-${index}-tabpanel`}\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={isSelected}\n      tabIndex={isDisabled ? undefined : tabIndex}\n      onKeyDown={onKeyDown}\n      onClick={() => {\n        setSelectedTab(index!);\n      }}\n      to={to}\n      relative={relative}\n      className={mergedClassname}\n      ref={(el: HTMLElement) => {\n        if (tabsRef.current && el) {\n          tabsRef.current[index!] = el;\n        }\n      }}\n    >\n      {children}\n    </Element>\n  );\n}\n\ninterface TextColorProps {\n  isDisabled?: boolean;\n  isSelected: boolean;\n}\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\n  if (isDisabled) {\n    return 'text-disabled cursor-default';\n  }\n  if (isSelected) {\n    return 'text-primary';\n  }\n  return 'text-muted hover:text-main';\n}\n","import React, {\n  Children,\n  cloneElement,\n  ComponentPropsWithoutRef,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport clsx from 'clsx';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {TabContext} from './tabs-context';\n\nexport interface TabPanelsProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function TabPanels({children, className}: TabPanelsProps) {\n  const {selectedTab, isLazy} = useContext(TabContext);\n\n  // filter out falsy values, in case of conditional rendering\n  const panelArray = Children.toArray(children).filter(p => !!p);\n\n  let rendered: ReactNode;\n  if (isLazy) {\n    const el = panelArray[selectedTab] as ReactElement;\n    rendered = isValidElement(el)\n      ? cloneElement<TabPanelProps>(panelArray[selectedTab] as ReactElement, {\n          index: selectedTab,\n        })\n      : null;\n  } else {\n    rendered = panelArray.map((panel, index) => {\n      if (isValidElement<TabPanelsProps>(panel)) {\n        const isSelected = index === selectedTab;\n        return cloneElement<TabPanelProps>(panel, {\n          index,\n          'aria-hidden': !isSelected,\n          className: !isSelected\n            ? clsx(panel.props.className, 'hidden')\n            : panel.props.className,\n        });\n      }\n      return null;\n    });\n  }\n\n  return <div className={className}>{rendered}</div>;\n}\n\ninterface TabPanelProps extends ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  children: ReactNode;\n  index?: number;\n}\nexport function TabPanel({\n  className,\n  children,\n  index,\n  ...domProps\n}: TabPanelProps) {\n  const {id} = useContext(TabContext);\n\n  const [tabIndex, setTabIndex] = useState<number | undefined>(0);\n  const ref = useRef<HTMLDivElement>(null);\n\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  useLayoutEffect(() => {\n    if (ref?.current) {\n      const update = () => {\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\n        const walker = getFocusableTreeWalker(ref.current!, {tabbable: true});\n        setTabIndex(walker.nextNode() ? undefined : 0);\n      };\n\n      update();\n\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      const observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled'],\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [ref]);\n\n  return (\n    <div\n      tabIndex={tabIndex}\n      ref={ref}\n      id={`${id}-${index}-tabpanel`}\n      aria-labelledby={`${id}-${index}-tab`}\n      className={clsx(className, 'focus-visible:outline-primary-light')}\n      role=\"tabpanel\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","export function isSubdomain(host: string): boolean {\n  return (host.replace('www.', '').match(/\\./g) || []).length > 1;\n}\n","import {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {Trans} from '@common/i18n/trans';\nimport {ReactNode} from 'react';\n\ninterface DomainProgressIndicatorProps {\n  message?: ReactNode;\n}\nexport function DomainProgressIndicator({\n  message = <Trans message=\"Checking DNS configuration...\" />,\n}: DomainProgressIndicatorProps) {\n  return (\n    <div className=\"flex items-center gap-18 text-base p-12 rounded bg-primary/10 text-primary\">\n      <ProgressCircle isIndeterminate size=\"sm\" />\n      <div>{message}</div>\n    </div>\n  );\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {Trans} from '@common/i18n/trans';\nimport {ReactNode} from 'react';\nimport {ConnectDomainStepProps} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-step';\nimport {isSubdomain} from '@common/custom-domains/datatable/connect-domain-dialog/is-subdomain';\nimport {DomainProgressIndicator} from '@common/custom-domains/datatable/connect-domain-dialog/domain-progress-indicator';\n\nexport function InfoStep({\n  stepper: {\n    state: {isLoading, host, serverIp},\n  },\n}: ConnectDomainStepProps) {\n  const {base_url} = useSettings();\n\n  if (isLoading) {\n    return <DomainProgressIndicator />;\n  }\n\n  if (isSubdomain(host)) {\n    return (\n      <Message\n        title={\n          <Trans message=\"Add this CNAME record to your domain by visiting your DNS provider or registrar.\" />\n        }\n        record=\"CNAME\"\n        target={base_url}\n      />\n    );\n  }\n\n  return (\n    <Message\n      title={\n        <Trans message=\"Add this A record to your domain by visiting your DNS provider or registrar.\" />\n      }\n      record=\"A\"\n      target={serverIp}\n    />\n  );\n}\n\ninterface MessageProps {\n  title: ReactNode;\n  record: string;\n  target: string;\n}\n\nfunction Message({title, record, target}: MessageProps) {\n  return (\n    <div>\n      <div className=\"text-muted mb-10\">{title}</div>\n      <div className=\"flex items-center gap-12 text-base p-12 rounded bg-primary/10 text-primary font-semibold\">\n        <div>{record}</div>\n        {target}\n      </div>\n    </div>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode, useId} from 'react';\nimport clsx from 'clsx';\nimport {useController} from 'react-hook-form';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {InputSize} from '../input-field/input-size';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {AutoFocusProps, useAutoFocus} from '../../focus/use-auto-focus';\n\ninterface SwitchProps\n  extends AutoFocusProps,\n    Omit<ComponentPropsWithoutRef<'input'>, 'size'> {\n  size?: InputSize;\n  className?: string;\n  description?: ReactNode;\n  invalid?: boolean;\n  errorMessage?: string;\n  iconRight?: ReactNode;\n}\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      children,\n      size = 'sm',\n      description,\n      className,\n      invalid,\n      autoFocus,\n      errorMessage,\n      iconRight,\n      ...domProps\n    } = props;\n\n    const inputRef = useObjectRef(ref);\n    useAutoFocus({autoFocus}, inputRef);\n\n    const style = getSizeClassName(size);\n    const fieldClassNames = getInputFieldClassNames(props);\n\n    const descriptionId = useId();\n\n    return (\n      <div className={clsx(className, 'isolate')}>\n        <label className=\"flex select-none items-center\">\n          <input\n            {...domProps}\n            type=\"checkbox\"\n            role=\"switch\"\n            aria-invalid={invalid || undefined}\n            aria-describedby={description ? descriptionId : undefined}\n            ref={inputRef}\n            aria-checked={domProps.checked}\n            className={clsx(\n              style,\n              !invalid &&\n                'checked:border-primary checked:bg-primary dark:checked:border-primary-dark dark:checked:bg-primary-dark',\n              invalid && 'checked:border-danger checked:bg-danger',\n              'relative flex flex-shrink-0 cursor-pointer appearance-none items-center overflow-hidden rounded-3xl border border-chip bg-chip p-0 outline-none transition-colors checked:border-primary checked:bg-primary',\n              'before:z-10 before:block before:translate-x-2 before:rounded-3xl before:border before:bg-white before:transition-transform',\n              'checked:before:border-white',\n              'focus-visible:ring',\n              props.disabled && 'cursor-not-allowed opacity-80',\n            )}\n          />\n          {children && (\n            <span\n              className={clsx(\n                fieldClassNames.size.font,\n                'ml-12',\n                invalid && 'text-danger',\n                props.disabled && 'text-disabled',\n              )}\n            >\n              {children}\n            </span>\n          )}\n          {iconRight}\n        </label>\n        {description && !errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.description}>\n            {description}\n          </div>\n        )}\n        {errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.error}>\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\ninterface FormSwitchProps extends SwitchProps {\n  name: string;\n}\nexport function FormSwitch(props: FormSwitchProps) {\n  const {\n    field: {onChange, onBlur, value = false, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<SwitchProps> = {\n    onChange: e => {\n      if (e.target.value && e.target.value !== 'on') {\n        onChange(e.target.checked ? e.target.value : false);\n      } else {\n        onChange(e);\n      }\n    },\n    onBlur,\n    checked: !!value,\n    invalid,\n    errorMessage: error?.message,\n    name: props.name,\n  };\n\n  return <Switch ref={ref} {...mergeProps(props, formProps)} />;\n}\n\nfunction getSizeClassName(size: InputSize): string {\n  switch (size) {\n    case 'xl':\n      return 'w-68 h-36 before:w-28 before:h-28 checked:before:translate-x-36';\n    case 'lg':\n      return 'w-56 h-30 before:w-22 before:h-22 checked:before:translate-x-30';\n    case 'md':\n      return 'w-46 h-24 before:w-18 before:h-18 checked:before:translate-x-24';\n    case 'xs':\n      return 'w-30 h-18 before:w-12 before:h-12 checked:before:translate-x-14';\n    default:\n      return 'w-38 h-20 before:w-14 before:h-14 checked:before:translate-x-20';\n  }\n}\n","import {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment} from 'react';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {ConnectDomainStepProps} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-step';\n\nexport function HostStep({stepper}: ConnectDomainStepProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        autoFocus\n        name=\"host\"\n        required\n        maxLength={100}\n        label={<Trans message=\"Host\" />}\n        placeholder=\"https://example.com\"\n        description={\n          <Trans message=\"Enter the exact domain name you want your items to be accessible with. It can be a subdomain (example.yourdomain.com) or root domain (yourdomain.com).\" />\n        }\n      />\n      {stepper.showGlobalField && (\n        <FormSwitch\n          className=\"mt-24 border-t pt-24\"\n          name=\"global\"\n          description={\n            <Trans message=\"Whether all users should be able to select this domain.\" />\n          }\n        >\n          <Trans message=\"Global\" />\n        </FormSwitch>\n      )}\n    </Fragment>\n  );\n}\n","import {useConnectDomainStepper} from '@common/custom-domains/datatable/connect-domain-dialog/use-connect-domain-stepper';\n\nexport enum ConnectDomainStep {\n  Host = 1,\n  Info = 2,\n  ValidationFailed = 3,\n  Finalize = 4,\n}\n\nexport interface ConnectDomainStepProps {\n  stepper: ReturnType<typeof useConnectDomainStepper>;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  result: 'connected' | null;\n}\n\ninterface Payload {\n  host: string;\n}\n\nexport function useValidateDomainDns() {\n  return useMutation({\n    mutationFn: (props: Payload) => authorize(props),\n  });\n}\n\nfunction authorize(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('secure/custom-domain/validate/2BrM45vvfS/api', payload)\n    .then(r => r.data);\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment, ReactNode} from 'react';\nimport {ConnectDomainStepProps} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-step';\nimport {useAuth} from '@common/auth/use-auth';\nimport {isSubdomain} from '@common/custom-domains/datatable/connect-domain-dialog/is-subdomain';\nimport {WarningIcon} from '@common/icons/material/Warning';\nimport {useValidateDomainDns} from '@common/custom-domains/datatable/requests/use-validate-domain-dns';\nimport {DomainProgressIndicator} from '@common/custom-domains/datatable/connect-domain-dialog/domain-progress-indicator';\n\nexport function ValidationFailedStep({\n  stepper: {\n    goToNextStep,\n    state: {host, serverIp, isLoading, validationFailReason},\n  },\n}: ConnectDomainStepProps) {\n  const validateDns = useValidateDomainDns();\n  const {base_url} = useSettings();\n  const {hasPermission} = useAuth();\n  const subdomain = isSubdomain(host);\n  const record = subdomain ? 'CNAME' : 'A';\n  const location = subdomain ? base_url : serverIp;\n\n  if (isLoading) {\n    return <DomainProgressIndicator />;\n  }\n\n  const errorMessage =\n    validationFailReason === 'serverNotConfigured' && hasPermission('admin') ? (\n      <ErrorMessage>\n        <Trans\n          message=\"DNS records for the domain are setup, however it seems that your server is not configured to handle requests from “:host“\"\n          values={{host: location}}\n        />\n      </ErrorMessage>\n    ) : (\n      <ErrorMessage>\n        <Trans\n          message=\"The domain is missing :record record pointing to :location or the changes haven't propagated yet.\"\n          values={{record, location}}\n        />\n      </ErrorMessage>\n    );\n\n  return (\n    <Fragment>\n      {errorMessage}\n      <div className=\"whitespace-nowrap text-xs text-muted mt-10\">\n        <Trans\n          message=\"You can wait and try again later, or <b>refresh</b>\"\n          values={{\n            b: (text: string) => (\n              <button\n                disabled={isLoading}\n                type=\"button\"\n                className=\"text-primary underline\"\n                onClick={() => {\n                  goToNextStep();\n                }}\n              >\n                {text}\n              </button>\n            ),\n          }}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface ErrorMessageProps {\n  children: ReactNode;\n}\nfunction ErrorMessage({children}: ErrorMessageProps) {\n  return (\n    <div className=\"flex items-center gap-12 text-base p-12 rounded bg-warning/15 text-warning font-medium\">\n      <WarningIcon size=\"lg\" />\n      {children}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  serverIp: string;\n}\n\nexport interface AuthorizeDomainConnectPayload {\n  host: string;\n}\n\n// check if is this host is not connected already and if user has permissions to connect domains\nexport function useAuthorizeDomainConnect(\n  form: UseFormReturn<AuthorizeDomainConnectPayload>,\n) {\n  return useMutation({\n    mutationFn: (props: AuthorizeDomainConnectPayload) => authorize(props),\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction authorize(payload: AuthorizeDomainConnectPayload): Promise<Response> {\n  return apiClient\n    .post('secure/custom-domain/authorize/store', payload)\n    .then(r => r.data);\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\nimport {toast} from '@common/ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {CustomDomain} from '@common/custom-domains/custom-domain';\n\ninterface Response extends BackendResponse {\n  domain: CustomDomain;\n}\n\ninterface Payload {\n  host: string;\n  global?: boolean;\n}\n\nexport function useConnectDomain() {\n  const {trans} = useTrans();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (props: Payload) => connectDomain(props),\n    onSuccess: response => {\n      toast.positive(\n        trans(\n          message('“:domain” connected', {\n            values: {domain: response.domain.host},\n          }),\n        ),\n      );\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('custom-domain'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction connectDomain(payload: Payload): Promise<Response> {\n  return apiClient.post('custom-domain', payload).then(r => r.data);\n}\n","import {useState} from 'react';\nimport {ConnectDomainStep} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-step';\nimport {DomainValidationErrorResponse} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-dialog';\nimport {\n  AuthorizeDomainConnectPayload,\n  useAuthorizeDomainConnect,\n} from '@common/custom-domains/datatable/requests/use-authorize-domain-connect';\nimport {useForm} from 'react-hook-form';\nimport {AxiosError} from 'axios';\nimport {useValidateDomainDns} from '@common/custom-domains/datatable/requests/use-validate-domain-dns';\nimport {useConnectDomain} from '@common/custom-domains/datatable/requests/use-connect-domain';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface ConnectDomainStepperState {\n  isLoading: boolean;\n  currentStep: ConnectDomainStep;\n  host: string;\n  serverIp: string;\n  validationFailReason?: DomainValidationErrorResponse['failReason'];\n}\n\ninterface StepHandlerResult {\n  status: 'success' | 'error';\n  newState?: Partial<ConnectDomainStepperState>;\n}\n\ninterface UseConnectDomainStepperProps {\n  showGlobalField?: boolean;\n}\nexport function useConnectDomainStepper({\n  showGlobalField,\n}: UseConnectDomainStepperProps) {\n  const {close} = useDialogContext();\n  const form = useForm<AuthorizeDomainConnectPayload>();\n  const authorizeDomainConnect = useAuthorizeDomainConnect(form);\n  const validateDns = useValidateDomainDns();\n  const connectDomain = useConnectDomain();\n\n  const [state, setState] = useState<ConnectDomainStepperState>({\n    isLoading: false,\n    currentStep: ConnectDomainStep.Host,\n    host: '',\n    serverIp: '',\n  });\n\n  const startLoading = () => {\n    setState({\n      ...state,\n      isLoading: true,\n    });\n  };\n\n  const handleDomainValidation = (): Promise<StepHandlerResult> => {\n    return new Promise(resolve => {\n      validateDns.mutate(\n        {host: state.host},\n        {\n          onSuccess: () => {\n            resolve({\n              status: 'success',\n              newState: {validationFailReason: undefined},\n            });\n          },\n          onError: err => {\n            resolve({\n              status: 'error',\n              newState: {\n                validationFailReason: (\n                  err as AxiosError<DomainValidationErrorResponse>\n                ).response?.data.failReason,\n              },\n            });\n          },\n        },\n      );\n    });\n  };\n\n  const handleDomainAuthorization = (): Promise<StepHandlerResult> => {\n    return new Promise(resolve => {\n      authorizeDomainConnect.mutate(form.getValues(), {\n        onSuccess: response => {\n          resolve({\n            status: 'success',\n            newState: {\n              host: form.getValues().host,\n              serverIp: response.serverIp,\n            },\n          });\n        },\n        onError: () => {\n          resolve({status: 'error'});\n        },\n      });\n    });\n  };\n\n  const hasPreviousStep = state.currentStep !== ConnectDomainStep.Host;\n\n  const goToPreviousStep = () => {\n    if (!hasPreviousStep || state.isLoading) return;\n\n    if (state.currentStep === ConnectDomainStep.Info) {\n      setState({\n        ...state,\n        currentStep: ConnectDomainStep.Host,\n      });\n    } else if (state.currentStep === ConnectDomainStep.ValidationFailed) {\n      setState({\n        ...state,\n        currentStep: ConnectDomainStep.Info,\n      });\n    }\n  };\n\n  const goToNextStep = async () => {\n    if (state.currentStep === ConnectDomainStep.Host) {\n      startLoading();\n      const result = await handleDomainAuthorization();\n      setState({\n        ...state,\n        ...result.newState,\n        isLoading: false,\n        currentStep:\n          result.status === 'success'\n            ? ConnectDomainStep.Info\n            : ConnectDomainStep.Host,\n      });\n    } else if (\n      state.currentStep === ConnectDomainStep.Info ||\n      state.currentStep === ConnectDomainStep.ValidationFailed\n    ) {\n      startLoading();\n      const validationResult = await handleDomainValidation();\n      const nextStep =\n        validationResult.status === 'success'\n          ? ConnectDomainStep.Finalize\n          : ConnectDomainStep.ValidationFailed;\n      setState({\n        ...state,\n        ...validationResult.newState,\n        isLoading: false,\n        currentStep: nextStep,\n      });\n      if (nextStep === ConnectDomainStep.Finalize) {\n        connectDomain.mutate(form.getValues(), {\n          onSettled: response => {\n            close(response?.domain);\n          },\n        });\n      }\n    }\n  };\n\n  return {\n    form,\n    state,\n    goToNextStep,\n    hasPreviousStep,\n    goToPreviousStep,\n    showGlobalField,\n  };\n}\n","import {Trans} from '@common/i18n/trans';\nimport {DomainProgressIndicator} from '@common/custom-domains/datatable/connect-domain-dialog/domain-progress-indicator';\n\nexport function FinalizeStep() {\n  return (\n    <div>\n      <DomainProgressIndicator\n        message={<Trans message=\"Connecting domain...\" />}\n      />\n      <div className=\"text-muted mt-10 text-xs\">\n        <Trans message=\"Don't close this window until domain is connected.\" />\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const KeyboardArrowLeftIcon = createSvgIcon(\n  <path d=\"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\n, 'KeyboardArrowLeftOutlined');\n","import {Trans} from '@common/i18n/trans';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {InfoStep} from '@common/custom-domains/datatable/connect-domain-dialog/info-step';\nimport {HostStep} from '@common/custom-domains/datatable/connect-domain-dialog/host-step';\nimport {ConnectDomainStep} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-step';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {ValidationFailedStep} from '@common/custom-domains/datatable/connect-domain-dialog/validation-failed-step';\nimport {useConnectDomainStepper} from '@common/custom-domains/datatable/connect-domain-dialog/use-connect-domain-stepper';\nimport {Form} from '@common/ui/forms/form';\nimport {FinalizeStep} from '@common/custom-domains/datatable/connect-domain-dialog/finalize-step';\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\n\nexport interface DomainValidationErrorResponse extends BackendErrorResponse {\n  failReason: 'serverNotConfigured' | 'dnsNotSetup';\n}\n\ninterface ConnectDomainDialogProps {\n  showGlobalField?: boolean;\n}\nexport function ConnectDomainDialog({\n  showGlobalField,\n}: ConnectDomainDialogProps) {\n  const {close, formId} = useDialogContext();\n  const stepper = useConnectDomainStepper({showGlobalField});\n  const StepComponent = getStepComponent(stepper.state.currentStep);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Connect domain\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={stepper.form}\n          id={formId}\n          onSubmit={() => {\n            stepper.goToNextStep();\n          }}\n        >\n          <StepComponent stepper={stepper} />\n        </Form>\n      </DialogBody>\n      <DialogFooter\n        startAction={\n          <Button\n            variant=\"text\"\n            onClick={() => {\n              close();\n            }}\n          >\n            <Trans message=\"Cancel\" />\n          </Button>\n        }\n      >\n        {stepper.hasPreviousStep && (\n          <Button\n            startIcon={<KeyboardArrowLeftIcon />}\n            color=\"primary\"\n            variant=\"text\"\n            onClick={() => {\n              stepper.goToPreviousStep();\n            }}\n            disabled={stepper.state.isLoading}\n          >\n            <Trans message=\"Previous\" />\n          </Button>\n        )}\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          endIcon={<KeyboardArrowRightIcon />}\n          disabled={stepper.state.isLoading}\n        >\n          <Trans message=\"Next\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n\nfunction getStepComponent(step: ConnectDomainStep) {\n  switch (step) {\n    case ConnectDomainStep.Host:\n      return HostStep;\n    case ConnectDomainStep.Info:\n      return InfoStep;\n    case ConnectDomainStep.ValidationFailed:\n      return ValidationFailedStep;\n    case ConnectDomainStep.Finalize:\n      return FinalizeStep;\n  }\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\nexport interface SectionHelperProps {\n  title?: ReactNode;\n  description?: ReactNode;\n  actions?: ReactNode;\n  color?: 'positive' | 'danger' | 'warning' | 'primary' | 'neutral' | 'bgAlt';\n  className?: string;\n  size?: 'sm' | 'md';\n}\nexport function SectionHelper({\n  title,\n  description,\n  actions,\n  color = 'primary',\n  className,\n  size = 'md',\n}: SectionHelperProps) {\n  return (\n    <div\n      className={clsx(\n        className,\n        'rounded p-10',\n        size === 'sm' ? 'text-xs' : 'text-sm',\n        color === 'positive' && 'bg-positive/focus',\n        color === 'warning' && 'bg-warning/focus',\n        color === 'danger' && 'bg-danger/focus',\n        color === 'primary' && 'bg-primary/focus',\n        color === 'neutral' && 'border bg',\n        color === 'bgAlt' && 'border bg-alt',\n      )}\n    >\n      {title && <div className=\"mb-4 font-medium\">{title}</div>}\n      {description && <div>{description}</div>}\n      {actions && <div className=\"mt-14\">{actions}</div>}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const AddIcon = createSvgIcon(\n  <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n, 'AddOutlined');\n","import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactElement,\n} from 'react';\nimport clsx from 'clsx';\nimport type {ChipProps} from './chip';\n\nexport interface ChipListProps {\n  className?: string;\n  children?: ReactElement | ReactElement[];\n  size?: ChipProps['size'];\n  radius?: ChipProps['radius'];\n  color?: ChipProps['color'];\n  selectable?: ChipProps['selectable'];\n  wrap?: boolean;\n}\nexport function ChipList({\n  className,\n  children,\n  size,\n  color,\n  radius,\n  selectable,\n  wrap = true,\n}: ChipListProps) {\n  return (\n    <div\n      className={clsx(\n        'flex items-center gap-8',\n        wrap && 'flex-wrap',\n        className,\n      )}\n    >\n      {Children.map(children, chip => {\n        if (isValidElement<ChipProps>(chip)) {\n          return cloneElement<ChipProps>(chip, {\n            size,\n            color,\n            selectable,\n            radius,\n          });\n        }\n      })}\n    </div>\n  );\n}\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import clsx from 'clsx';\nimport React, {\n  ComponentProps,\n  ComponentPropsWithoutRef,\n  forwardRef,\n} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {AvatarPlaceholderIcon} from '@common/auth/ui/account-settings/avatar/avatar-placeholder-icon';\n\ntype Size = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | string;\n\nexport interface AvatarProps extends ComponentPropsWithoutRef<any> {\n  className?: string;\n  src?: string;\n  label?: string;\n  circle?: boolean;\n  size?: Size;\n  link?: string;\n  fallback?: 'initials' | 'generic';\n  lazy?: boolean;\n}\nexport const Avatar = forwardRef<HTMLImageElement, AvatarProps>(\n  (\n    {\n      className,\n      circle,\n      size = 'md',\n      src,\n      link,\n      label,\n      fallback = 'generic',\n      lazy = true,\n      ...domProps\n    },\n    ref,\n  ) => {\n    let renderedAvatar = src ? (\n      <img\n        ref={ref}\n        src={src}\n        alt={label}\n        loading={lazy ? 'lazy' : undefined}\n        className=\"block h-full w-full object-cover\"\n      />\n    ) : (\n      <div className=\"h-full w-full bg-alt dark:bg-chip\">\n        <AvatarPlaceholderIcon\n          viewBox=\"0 0 48 48\"\n          className=\"h-full w-full text-muted\"\n        />\n      </div>\n    );\n\n    if (label) {\n      renderedAvatar = <Tooltip label={label}>{renderedAvatar}</Tooltip>;\n    }\n\n    const wrapperProps: ComponentProps<any> = {\n      ...domProps,\n      className: clsx(\n        className,\n        'relative block overflow-hidden select-none flex-shrink-0',\n        getSizeClassName(size),\n        circle ? 'rounded-full' : 'rounded',\n      ),\n    };\n\n    return link ? (\n      <Link {...wrapperProps} to={link}>\n        {renderedAvatar}\n      </Link>\n    ) : (\n      <div {...wrapperProps}>{renderedAvatar}</div>\n    );\n  },\n);\n\nfunction getSizeClassName(size: Size) {\n  switch (size) {\n    case 'xs':\n      return 'w-18 h-18';\n    case 'sm':\n      return 'w-24 h-24';\n    case 'md':\n      return 'w-32 h-32';\n    case 'lg':\n      return 'w-40 h-40';\n    case 'xl':\n      return 'w-60 h-60';\n    // allow overriding with custom classNames\n    default:\n      return size;\n  }\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field, FieldProps} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '../../../progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Avatar} from '../../../images/avatar';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {Popover} from '../../../overlays/popover';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"sm\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n        />\n        <ChipInput\n          size={props.size}\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className={clsx(\n        'max-w-full flex-shrink-0 flex-wrap',\n        chipSize === 'xs' ? 'my-6' : 'my-8',\n      )}\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={item.image ? <Avatar circle src={item.image} /> : null}\n          onClick={() => onChipClick?.(item)}\n          onRemove={() => {\n            const newItems = removeItem(item.id);\n            if (newItems.length) {\n              // focus previous chip\n              manager?.focusPrevious({tabbable: true});\n            } else {\n              // focus input\n              manager?.focusLast();\n            }\n          }}\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n  size: FieldProps['size'];\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n    size,\n  } = props;\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        type=\"text\"\n        className={clsx(\n          'mx-8 my-4 min-w-30 flex-[1_1_60px] bg-transparent text-sm outline-none',\n          size === 'xs' ? 'h-20' : 'h-30',\n        )}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: handleFocusAndClick,\n          onClick: handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DeleteIcon = createSvgIcon(\n  <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\n, 'DeleteOutlined');\n","export function createScriptEl(src: string, id?: string): HTMLScriptElement {\n    const script = document.createElement('script');\n    if (id) {\n        script.id = id;\n    }\n    script.src = src;\n    return script;\n}\n","export function createLinkEl(href: string, id?: string): HTMLLinkElement {\n    const link = document.createElement('link') as HTMLLinkElement;\n    link.rel = 'stylesheet';\n    link.href = href;\n    if (id) link.id = id;\n    return link;\n}\n","export function randomString(length: number = 36) {\n  let random = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return random;\n}\n","export interface SeoTags {\n  title?: string | null;\n  description?: string | null;\n  keywords?: string | null;\n}\n\nexport function getSeoTags(doc: Document): SeoTags {\n  return {\n    title: doc.querySelector('title')?.innerText,\n    description: doc\n      .querySelector('meta[name=\"description\"]')\n      ?.getAttribute('content'),\n    keywords: doc\n      .querySelector('meta[name=\"keywords\"]')\n      ?.getAttribute('content'),\n  };\n}\n\nexport function setSeoTags(tags: SeoTags, doc: Document) {\n  setTagValue('title', tags.title, doc);\n  setTagValue('description', tags.description, doc);\n  setTagValue('keywords', tags.keywords, doc);\n}\n\nfunction setTagValue(\n  name: keyof SeoTags,\n  value: string | null | undefined,\n  doc: Document,\n) {\n  let node =\n    name === 'title'\n      ? doc.querySelector('title')\n      : doc.querySelector(`meta[name=${name}]`);\n\n  if (!value) {\n    if (node) {\n      node.remove();\n    }\n    return;\n  }\n\n  if (!node) {\n    node = doc.createElement(name === 'title' ? 'title' : 'meta');\n    doc.head.appendChild(node);\n  }\n\n  if (name === 'title') {\n    (node as HTMLElement).innerText = value;\n  } else {\n    node.setAttribute('name', name);\n    node.setAttribute('content', value);\n  }\n}\n","import {createScriptEl} from './create-script-el';\nimport {createLinkEl} from './create-link-el';\nimport {BuilderTemplate} from '@app/templates/builder-template';\nimport {randomString} from '@common/utils/string/random-string';\nimport {SeoTags, setSeoTags} from '@app/editor/utils/seo-tags';\n\nexport function getProductionHtml(\n  html: string = '',\n  template?: BuilderTemplate | null,\n  seoTags?: SeoTags,\n): string {\n  return (\n    '<!DOCTYPE html>' +\n    parseHtmlIntoDocument(html, template, seoTags).documentElement.outerHTML\n  );\n}\n\nfunction parseHtmlIntoDocument(\n  html: string = '',\n  template?: BuilderTemplate | null,\n  seoTags?: SeoTags,\n): Document {\n  const doc = new DOMParser().parseFromString(html?.trim(), 'text/html');\n\n  // remove old link/script nodes to frameworks, icons, templates etc.\n  INTERNAL_ASSET_IDS.forEach(id => {\n    const els = doc.querySelectorAll(id);\n    for (let i = 0; i < els.length; i++) {\n      els[i].parentElement?.removeChild(els[i]);\n    }\n  });\n\n  // remove \"contenteditable\" attribute\n  doc\n    .querySelectorAll('[contenteditable]')\n    .forEach(n => n.removeAttribute('contenteditable'));\n\n  addCustomCssAndJsTags(doc);\n\n  if (\n    // if no template config, then include bootstrap\n    template?.config?.includeBootstrap !== false &&\n    !containsBootstrap(doc)\n  ) {\n    addBootstrap(doc);\n  }\n\n  const fontAwesomeLinks = doc.querySelectorAll(\n    `link[href$=\"font-awesome.min.css\"]`,\n  );\n  fontAwesomeLinks.forEach(link => link.remove());\n  addFontawesome(doc);\n\n  if (seoTags) {\n    setSeoTags(seoTags, doc);\n  }\n\n  return doc;\n}\n\nfunction addBootstrap(document: Document) {\n  document.head.appendChild(\n    createLinkEl(\n      `bootstrap/bootstrap.min.css?${randomString(8)}`,\n      'bootstrap-css',\n    ),\n  );\n  document.body.appendChild(\n    createScriptEl(`bootstrap/jquery.min.js?${randomString(8)}`, 'jquery'),\n  );\n  document.body.appendChild(\n    createScriptEl(\n      `bootstrap/bootstrap.min.js?${randomString(8)}`,\n      'bootstrap-js',\n    ),\n  );\n}\n\nfunction addFontawesome(document: Document) {\n  document.head.appendChild(\n    createLinkEl(\n      `font-awesome/font-awesome.min.css?${randomString(8)}`,\n      'font-awesome',\n    ),\n  );\n}\n\nfunction addCustomCssAndJsTags(document: Document) {\n  document.head.appendChild(\n    createLinkEl(\n      `css/custom_elements.css?${randomString(8)}`,\n      'custom-elements-css',\n    ),\n  );\n  document.head.appendChild(\n    createLinkEl(`css/code_editor_styles.css?${randomString(8)}`, 'custom-css'),\n  );\n  document.body.appendChild(\n    createScriptEl(`js/code_editor_scripts.js?${randomString(8)}`, 'custom-js'),\n  );\n}\n\nfunction containsBootstrap(doc: Document): boolean {\n  return !!Array.from(doc.querySelectorAll('link')).find(l =>\n    l.href.includes('bootstrap'),\n  );\n}\n\nconst INTERNAL_ASSET_IDS = [\n  'base',\n  '#jquery',\n  '#custom-css',\n  '#custom-js',\n  '#template-js',\n  '[id^=library]',\n  '#theme-css',\n  '#template-css',\n  '#framework-css',\n  '#framework-js',\n  '#preview-css',\n  '#font-awesome',\n  '#custom-elements-css',\n  '#bootstrap-css',\n  '#bootstrap-js',\n  '.html2canvas-container',\n];\n","export const BLANK_PAGE_SKELETON = `<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div>`;\n"],"names":["removeProtocol","url","ProjectLink","project","className","children","color","linkProps","finalUri","useMemo","getProjectPreviewUrl","jsx","Link","clsx","options","getBootstrapData","getProjectSubdomainUrl","base","parsed","getProjectImageUrl","getProjectEditorUrl","p","uri","KeyboardArrowRightIcon","createSvgIcon","useAccountUsage","useQuery","fetchUsage","reloadAccountUsage","queryClient","apiClient","response","TabContext","React","Tabs","props","size","isLazy","overflow","tabsRef","useRef","id","useId","selectedTab","setSelectedTab","useControlledState","ContextValue","TabLine","useContext","style","setStyle","useState","useLayoutEffect","el","prevState","TabList","center","expand","childrenArray","Children","FocusScope","jsxs","child","index","isValidElement","cloneElement","Tab","isDisabled","paddingProp","elementType","to","relative","width","isSelected","focusManager","useFocusManager","padding","mergedClassname","textColor","onKeyDown","e","tabIndex","Element","TabPanels","panelArray","rendered","panel","TabPanel","domProps","setTabIndex","ref","update","walker","getFocusableTreeWalker","observer","isSubdomain","host","DomainProgressIndicator","message","Trans","ProgressCircle","InfoStep","isLoading","serverIp","base_url","useSettings","Message","title","record","target","Switch","description","invalid","autoFocus","errorMessage","iconRight","inputRef","useObjectRef","useAutoFocus","getSizeClassName","fieldClassNames","getInputFieldClassNames","descriptionId","FormSwitch","onChange","onBlur","value","error","useController","formProps","mergeProps","HostStep","stepper","Fragment","FormTextField","ConnectDomainStep","useValidateDomainDns","useMutation","authorize","payload","r","ValidationFailedStep","goToNextStep","validationFailReason","hasPermission","useAuth","subdomain","location","ErrorMessage","text","WarningIcon","useAuthorizeDomainConnect","form","err","onFormQueryError","DatatableDataQueryKey","endpoint","params","key","useDatatableData","onLoad","signal","paginate","keepPreviousData","resolve","useConnectDomain","trans","useTrans","useQueryClient","connectDomain","toast","showHttpErrorToast","useConnectDomainStepper","showGlobalField","close","useDialogContext","useForm","authorizeDomainConnect","validateDns","state","setState","startLoading","handleDomainValidation","_a","handleDomainAuthorization","hasPreviousStep","result","validationResult","nextStep","FinalizeStep","KeyboardArrowLeftIcon","ConnectDomainDialog","formId","StepComponent","getStepComponent","Dialog","DialogHeader","DialogBody","Form","DialogFooter","Button","step","SectionHelper","actions","AddIcon","ChipList","radius","selectable","wrap","chip","Input","inputProps","wrapperProps","onClick","Avatar","forwardRef","circle","src","link","label","fallback","lazy","renderedAvatar","AvatarPlaceholderIcon","Tooltip","stringToChipValue","ChipFieldInner","fieldRef","displayWith","v","validateWith","suggestions","inputValue","onInputValueChange","onItemSelected","placeholder","onOpenChange","chipSize","openMenuOnFocus","showEmptyMessage","propsValue","defaultValue","propsOnChange","valueKey","isAsync","allowCustomValue","showDropdownArrow","onChipClick","inputFieldProps","useChipFieldValueState","listboxIsOpen","setListboxIsOpen","loadingIndicator","dropdownArrow","KeyboardArrowDownIcon","fieldProps","useField","Field","ListWrapper","ChipInput","items","setItems","displayChipUsing","manager","removeItem","useCallback","i","cr","newItems","item","Chip","setChips","chips","addItems","listbox","useListbox","handleItemSelection","activeIndex","setActiveIndex","isOpen","setIsOpen","setInputValue","refs","listboxId","collection","onInputChange","textValue","option","handleTriggerKeyDown","handleListboxKeyboardNavigation","useListboxKeyboardNavigation","handleFocusAndClick","createEventHandler","Listbox","Popover","emails","selection","email","input","mixedValueToChipValue","propsDefaultValue","handleChange","newValue","ChipField","DeleteIcon","createScriptEl","script","createLinkEl","href","randomString","length","random","possible","getSeoTags","doc","_b","_c","setSeoTags","tags","setTagValue","name","node","getProductionHtml","html","template","seoTags","parseHtmlIntoDocument","INTERNAL_ASSET_IDS","els","n","addCustomCssAndJsTags","containsBootstrap","addBootstrap","addFontawesome","document","l","BLANK_PAGE_SKELETON"],"mappings":"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"}