{"version":3,"file":"dashboard-routes-5ab115c4.js","sources":["../../../resources/client/dashboard/use-projects.ts","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/projects/use-delete-project.ts","../../../resources/client/dashboard/dashboard-navbar.tsx","../../../common/resources/client/workspace/requests/create-workspace.ts","../../../common/resources/client/workspace/new-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/workspace-with-members.ts","../../../common/resources/client/workspace/requests/invite-members.ts","../../../common/resources/client/workspace/requests/resend-invite.ts","../../../common/resources/client/utils/string/is-email.ts","../../../common/resources/client/workspace/requests/change-role.ts","../../../common/resources/client/workspace/requests/remove-member.ts","../../../common/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/resources/client/workspace/workspace-members-dialog.tsx","../../../common/resources/client/workspace/requests/update-workspace.ts","../../../common/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/delete-workspace.ts","../../../common/resources/client/workspace/workspace-selector.tsx","../../../resources/client/dashboard/dashboard-workspace-selector.tsx","../../../common/resources/client/admin/ads/ad-host.tsx","../../../resources/client/dashboard/dashboard-page.tsx","../../../resources/client/templates/template-grid-layout.tsx","../../../resources/client/projects/new-project-dialog.tsx","../../../resources/client/dashboard/new-project-page.tsx","../../../common/resources/client/custom-domains/datatable/requests/use-update-domain.ts","../../../resources/client/dashboard/custom-domains-page.tsx","../../../resources/client/dashboard/template-preview-page.tsx","../../../resources/client/dashboard/dashboard-routes.tsx"],"sourcesContent":["import {Project} from '@app/dashboard/project';\nimport {\n  useInfiniteData,\n  UseInfiniteDataProps,\n} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\ninterface Params {\n  userId?: string | number;\n  published?: string;\n  paginate?: UseInfiniteDataProps<undefined>['paginate'];\n}\n\nexport function useProjects(params: Params) {\n  const {workspaceId} = useActiveWorkspaceId();\n  return useInfiniteData<Project>({\n    queryKey: ['projects', {...params, workspaceId}],\n    endpoint: 'projects',\n    paginate: params.paginate || 'simple',\n    defaultOrderBy: 'updated_at',\n    defaultOrderDir: 'desc',\n    queryParams: {\n      ...params,\n      workspaceId,\n    },\n    willSortOrFilter: true,\n  });\n}\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\n\nexport interface InfiniteScrollSentinelProps {\n  loaderMarginTop?: string;\n  children?: ReactNode;\n  loadMoreExtraContent?: ReactNode;\n  query: UseInfiniteQueryResult;\n  style?: React.CSSProperties;\n  className?: string;\n  variant?: 'infiniteScroll' | 'loadMore';\n  size?: 'sm' | 'md';\n}\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'md',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant =\n    _variant === 'loadMore' && loadMoreClickCount < 3\n      ? 'loadMore'\n      : 'infiniteScroll';\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage && !isLoading) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n\n  let content: ReactNode;\n\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && (\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button\n          size={size === 'md' ? 'sm' : 'xs'}\n          className={clsx(\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112'\n          )}\n          variant=\"outline\"\n          color=\"primary\"\n          onClick={() => {\n            fetchNextPage();\n            setLoadMoreClickCount(loadMoreClickCount + 1);\n          }}\n          disabled={isLoading}\n        >\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\n            <Trans message=\"Load all\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      </div>\n    );\n  } else {\n    content = (\n      <AnimatePresence>\n        {isFetchingNextPage && (\n          <m.div\n            className={clsx('flex justify-center w-full', loaderMarginTop)}\n            {...opacityAnimation}\n          >\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\n      role=\"presentation\"\n    >\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {reloadAccountUsage} from '@app/editor/use-account-usage';\n\ninterface Payload {\n  projectId: number | string;\n}\n\nexport function useDeleteProject() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteProject(payload),\n    onSuccess: async () => {\n      reloadAccountUsage();\n      await queryClient.invalidateQueries({queryKey: ['projects']});\n      toast(trans(message('Project deleted')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nasync function deleteProject({projectId}: Payload) {\n  return apiClient\n    .delete<BackendResponse>(`projects/${projectId}`)\n    .then(r => r.data);\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport React from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function DashboardNavbar() {\n  const {billing} = useSettings();\n  return (\n    <Navbar\n      menuPosition=\"dashboard\"\n      className=\"flex-shrink-0\"\n      rightChildren={\n        billing.enable ? (\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            color=\"primary\"\n            elementType={Link}\n            to=\"/pricing\"\n          >\n            <Trans message=\"Upgrade\" />\n          </Button>\n        ) : undefined\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\n  return useMutation({\n    mutationFn: (props: Props) => createWorkspace(props),\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createWorkspace(props: Props): Promise<Response> {\n  return apiClient.post('workspace', props).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {useCreateWorkspace} from './requests/create-workspace';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\n\nexport function NewWorkspaceDialog() {\n  const form = useForm<{name: string}>();\n  const {formId, close} = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            createWorkspace.mutate(form.getValues(), {\n              onSuccess: response => {\n                close(response.workspace.id);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Workspace name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createWorkspace.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\n  workspace: Workspace;\n}\n\nfunction fetchWorkspaceWithMembers(\n  workspaceId: number,\n): Promise<FetchWorkspaceWithMembersResponse> {\n  return apiClient\n    .get(`workspace/${workspaceId}`)\n    .then(response => response.data);\n}\n\nexport function useWorkspaceWithMembers(workspaceId: number) {\n  return useQuery({\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invites: WorkspaceInvite[];\n}\n\ninterface Props {\n  workspaceId: number;\n  emails: string[];\n  roleId: number;\n}\n\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/invite`, other)\n    .then(r => r.data);\n}\n\nexport function useInviteMembers() {\n  return useMutation({\n    mutationFn: (props: Props) => InviteMembers(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invite: WorkspaceInvite;\n}\n\ninterface Props {\n  workspaceId: number;\n  inviteId: string;\n}\n\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\n    .then(r => r.data);\n}\n\nexport function useResendInvite() {\n  return useMutation({\n    mutationFn: (props: Props) => ResendInvite(props),\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","const matcher =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(string?: string): boolean {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {WorkspaceMember} from '../types/workspace-member';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  member: WorkspaceMember | WorkspaceInvite;\n  roleId: number;\n}\n\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\n  const modelType = member.model_type;\n  const memberId =\n    member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient\n    .post(\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\n      other,\n    )\n    .then(r => r.data);\n}\n\nexport function useChangeRole() {\n  return useMutation({\n    mutationFn: (props: Props) => ChangeRole(props),\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useAuth} from '../../auth/use-auth';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  memberId: number | string;\n  memberType: 'invite' | 'member';\n}\n\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType,\n}: Props): Promise<Response> {\n  const endpoint =\n    memberType === 'invite'\n      ? `workspace/invite/${memberId}`\n      : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\n\nexport function useRemoveMember() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const {user} = useAuth();\n  return useMutation({\n    mutationFn: (props: Props) => removeMember(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  onConfirm?: () => void;\n  isLoading?: boolean;\n}\nexport function LeaveWorkspaceConfirmation({onConfirm, isLoading}: Props) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Leave workspace\" />}\n      isLoading={isLoading}\n      onConfirm={onConfirm}\n      body={\n        <div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Leave\" />}\n    />\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {Workspace} from './types/workspace';\nimport {GroupIcon} from '../icons/material/Group';\nimport {WorkspaceMember} from './types/workspace-member';\nimport {useAuth} from '../auth/use-auth';\nimport {\n  ChipField,\n  ChipValue,\n} from '../ui/forms/input-field/chip-field/chip-field';\nimport {useValueLists} from '../http/value-lists';\nimport {Button} from '../ui/buttons/button';\nimport {ArrowDropDownIcon} from '../icons/material/ArrowDropDown';\nimport {useInviteMembers} from './requests/invite-members';\nimport {WorkspaceInvite} from './types/workspace-invite';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useResendInvite} from './requests/resend-invite';\nimport {isEmail} from '../utils/string/is-email';\nimport {ButtonSize} from '../ui/buttons/button-size';\nimport {useChangeRole} from './requests/change-role';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {useRemoveMember} from './requests/remove-member';\nimport {CloseIcon} from '../icons/material/Close';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {toast} from '../ui/toast/toast';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\nimport {useTrans} from '../i18n/use-trans';\nimport {message} from '../i18n/message';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ninterface WorkspaceMembersDialogProps {\n  workspace: Workspace;\n}\nexport function WorkspaceMembersDialog({\n  workspace,\n}: WorkspaceMembersDialogProps) {\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? (\n          <div className=\"flex min-h-[238px] items-center justify-center\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div>\n        ) : (\n          <Manager workspace={data!.workspace} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ManagerProps {\n  workspace: Workspace;\n}\nfunction Manager({workspace}: ManagerProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\n    ...(workspace.members || []),\n    ...(workspace.invites || []),\n  ];\n  const shouldHideOtherMembers = !can.update && !can.delete;\n\n  return (\n    <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans\n          message=\"Members of `:workspace`\"\n          values={{workspace: workspace.name}}\n        />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => {\n          if (shouldHideOtherMembers && member.id !== user?.id) {\n            return null;\n          }\n          return (\n            <MemberListItem\n              key={`${member.model_type}.${member.id}`}\n              workspace={workspace}\n              member={member}\n            />\n          );\n        })}\n        {shouldHideOtherMembers && (\n          <div className=\"text-muted\">\n            <Trans\n              message=\"And [one one other member|:count other members]\"\n              values={{count: members.length}}\n            />\n          </div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"mb-20 flex items-start gap-14 text-sm\"\n      key={`${member.model_type}.${member.id}`}\n    >\n      <img\n        className=\"h-36 w-36 flex-shrink-0 rounded\"\n        src={member.avatar}\n        alt=\"\"\n      />\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.display_name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>\n  );\n}\n\nfunction usePermissions(workspace: Workspace) {\n  const {user: authUser} = useAuth();\n  const response = {update: false, invite: false, delete: false};\n  const permissions = ['update', 'invite', 'delete'] as const;\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] =\n        authMember.is_owner ||\n        !!authMember.permissions?.find(\n          p => p.name === `workspace_members.${permission}`,\n        );\n    });\n  }\n\n  return response;\n}\n\ninterface MemberActionsProps {\n  workspace: Workspace;\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction MemberActions({workspace, member}: MemberActionsProps) {\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\n  const changeRole = useChangeRole();\n  const {user} = useAuth();\n\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser =\n    member.model_type === 'member' && user?.id === member.id;\n\n  const roleSelector =\n    !can.update || isOwner || isCurrentUser ? (\n      <div className=\"ml-auto text-muted first:capitalize\">\n        <Trans message={member.role_name} />\n      </div>\n    ) : (\n      <RoleMenuTrigger\n        className=\"ml-auto flex-shrink-0\"\n        size=\"xs\"\n        value={selectedRole}\n        isDisabled={changeRole.isPending}\n        onChange={roleId => {\n          setSelectedRole(roleId);\n          changeRole.mutate({\n            roleId,\n            workspaceId: workspace.id,\n            member,\n          });\n        }}\n      />\n    );\n\n  return (\n    <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && (\n        <RemoveMemberButton\n          type={isCurrentUser ? 'leave' : 'remove'}\n          member={member}\n          workspace={workspace}\n        />\n      )}\n    </>\n  );\n}\n\ninterface InviteChipFieldProps {\n  workspace: Workspace;\n}\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\n  const {trans} = useTrans();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState<number>();\n  const inviteMembers = useInviteMembers();\n  const {data} = useValueLists(['workspaceRoles']);\n\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n\n  return (\n    <div className=\"mb-30\">\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      />\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={inviteMembers.isPending || !allEmailsValid}\n            onClick={() => {\n              inviteMembers.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  roleId: selectedRole,\n                  workspaceId: workspace.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                },\n              );\n            }}\n          >\n            <Trans message=\"Invite\" />\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\ninterface RemoveMemberButtonProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n  type: 'leave' | 'remove';\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type,\n}: RemoveMemberButtonProps) {\n  const removeMember = useRemoveMember();\n  const {close} = useDialogContext();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeMember.mutate({\n            workspaceId: workspace.id,\n            memberId: member.id,\n            memberType: member.model_type,\n          });\n          if (type === 'leave') {\n            close();\n            toast(message('Left workspace'));\n          }\n        }\n      }}\n    >\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0 text-muted\"\n        disabled={removeMember.isPending}\n      >\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? (\n        <LeaveWorkspaceConfirmation />\n      ) : (\n        <RemoveMemberConfirmation member={member} />\n      )}\n    </DialogTrigger>\n  );\n}\n\ninterface RemoveMemberConfirmationProps {\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Remove member\" />}\n      body={\n        <div>\n          <Trans\n            message=\"Are you sure you want to remove `:name`?\"\n            values={{name: member.display_name}}\n          />\n          <div className=\"mt-8 font-semibold\">\n            <Trans\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\n              values={{\n                name: member.display_name,\n              }}\n            />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Remove\" />}\n    />\n  );\n}\n\ninterface RoleMenuTriggerProps {\n  onChange: (value: number) => void;\n  value?: number;\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled,\n}: RoleMenuTriggerProps) {\n  const {data} = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newValue => {\n        onChange(newValue as number);\n      }}\n    >\n      <Button\n        className={className}\n        size={size}\n        variant=\"flat\"\n        color=\"chip\"\n        disabled={isDisabled}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => (\n          <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface MemberDisplayNameAppendProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n\n  if (user?.id === member.id) {\n    return (\n      <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>\n    );\n  }\n  if (member.model_type === 'invite') {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? (\n          <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </>\n        ) : null}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const resendInvite = useResendInvite();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          resendInvite.mutate({\n            workspaceId: workspace.id,\n            inviteId: member.id as string,\n          });\n        }\n      }}\n    >\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={resendInvite.isPending}\n      >\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog\n        title={<Trans message=\"Resend invite\" />}\n        body={\n          <Trans message=\"Are you sure you want to send this invite again?\" />\n        }\n        confirm={<Trans message=\"Send\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\nexport interface UpdateWorkspacePayload {\n  id: number;\n  name: string;\n}\n\nfunction updateWorkspace({\n  id,\n  ...props\n}: UpdateWorkspacePayload): Promise<Response> {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\n\nexport function useUpdateWorkspace(\n  form: UseFormReturn<UpdateWorkspacePayload>,\n) {\n  const {close} = useDialogContext();\n  return useMutation({\n    mutationFn: (props: UpdateWorkspacePayload) => updateWorkspace(props),\n    onSuccess: response => {\n      close();\n      toast(message('Updated workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(\n          response.workspace.id,\n        ),\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {\n  UpdateWorkspacePayload,\n  useUpdateWorkspace,\n} from './requests/update-workspace';\nimport {Workspace} from './types/workspace';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  workspace: Workspace;\n}\nexport function RenameWorkspaceDialog({workspace}: Props) {\n  const form = useForm<UpdateWorkspacePayload>({\n    defaultValues: {id: workspace.id, name: workspace.name},\n  });\n  const {formId, close} = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            updateWorkspace.mutate(form.getValues());\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateWorkspace.isPending}\n        >\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport interface DeleteWorkspacePayload {\n  id: number;\n}\n\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\n\nexport function useDeleteWorkspace() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  return useMutation({\n    mutationFn: (props: DeleteWorkspacePayload) => deleteWorkspace(props),\n    onSuccess: (r, payload) => {\n      toast(message('Deleted workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id),\n      });\n\n      // if user deleted workspace that is currently active, switch to personal workspace\n      if (workspaceId === payload.id) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import clsx from 'clsx';\nimport {\n  cloneElement,\n  forwardRef,\n  Fragment,\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\nimport {ButtonBase} from '../ui/buttons/button-base';\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\nimport {UnfoldMoreIcon} from '../icons/material/UnfoldMore';\nimport {AddIcon} from '../icons/material/Add';\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\nimport {\n  useActiveWorkspace,\n  useActiveWorkspaceId,\n} from './active-workspace-id-context';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Workspace} from './types/workspace';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Button, ButtonProps} from '../ui/buttons/button';\nimport {CheckIcon} from '../icons/material/Check';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '../icons/material/KeyboardArrowDown';\nimport {PersonAddIcon} from '../icons/material/PersonAdd';\nimport {DeleteIcon} from '../icons/material/Delete';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {EditIcon} from '../icons/material/Edit';\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteWorkspace} from './requests/delete-workspace';\nimport {useRemoveMember} from './requests/remove-member';\nimport {useAuth} from '../auth/use-auth';\nimport {Trans} from '../i18n/trans';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {PolicyFailMessage} from '@common/billing/upgrade/policy-fail-message';\n\ninterface WorkspaceSelectorProps {\n  className?: string;\n  onChange?: (id: number) => void;\n  trigger?: ReactElement<ButtonProps>;\n  placement?: 'top' | 'bottom';\n}\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger,\n  placement = 'top',\n}: WorkspaceSelectorProps) {\n  const {data: workspaces, isFetched, isFetching} = useUserWorkspaces();\n  const {setWorkspaceId} = useActiveWorkspaceId();\n  const activeWorkspace = useActiveWorkspace();\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {hasPermission} = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\n\n  if (\n    // if we have a custom trigger, leave rendering up to the customer trigger\n    !trigger &&\n    (!activeWorkspace ||\n      (!hasPermission('workspaces.create') && workspaces?.length === 1))\n  ) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        placement={placement}\n        isOpen={selectorIsOpen}\n        onClose={() => {\n          setSelectorIsOpen(false);\n        }}\n      >\n        {trigger ? (\n          cloneElement(trigger, {\n            onClick: () => setSelectorIsOpen(!selectorIsOpen),\n          })\n        ) : (\n          <DefaultTrigger\n            onClick={() => setSelectorIsOpen(!selectorIsOpen)}\n            workspace={activeWorkspace!}\n            className={className}\n          />\n        )}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 border-b pb-10\">\n              {workspaces?.map(workspace => (\n                <WorkspaceItem\n                  key={workspace.id}\n                  workspace={workspace}\n                  setSelectorIsOpen={setSelectorIsOpen}\n                  onChange={onChange}\n                />\n              ))}\n            </div>\n            <div className=\"mb-4 px-4 text-center\">\n              <CreateWorkspaceButton\n                onClick={() => setSelectorIsOpen(false)}\n                onCreated={id => onChange?.(id)}\n                workspaceCount={workspaces ? workspaces.length - 1 : 0}\n              />\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface CreateWorkspaceButtonProps {\n  onClick: () => void;\n  onCreated?: (id: number) => void;\n  workspaceCount: number;\n}\nfunction CreateWorkspaceButton({\n  onClick,\n  onCreated,\n  workspaceCount,\n}: CreateWorkspaceButtonProps) {\n  const {setWorkspaceId} = useActiveWorkspaceId();\n  const {checkOverQuotaOrNoPermission} = useAuth();\n  const {overQuotaOrNoPermission} = checkOverQuotaOrNoPermission(\n    'workspaces.create',\n    'count',\n    workspaceCount,\n  );\n\n  return (\n    <Fragment>\n      <Button\n        disabled={overQuotaOrNoPermission}\n        onClick={async e => {\n          e.preventDefault();\n          e.stopPropagation();\n          onClick();\n          const workspaceId = await openDialog(NewWorkspaceDialog);\n          if (workspaceId) {\n            setWorkspaceId(workspaceId);\n            onCreated?.(workspaceId);\n          }\n        }}\n        variant=\"outline\"\n        startIcon={<AddIcon />}\n        color=\"primary\"\n        className=\"h-40 w-full\"\n      >\n        <Trans message=\"Create new workspace\" />\n      </Button>\n      {overQuotaOrNoPermission && (\n        <PolicyFailMessage\n          size=\"sm\"\n          className=\"mt-12 max-w-288\"\n          resourceName={<Trans message=\"worksapces\" />}\n        />\n      )}\n    </Fragment>\n  );\n}\n\ninterface DefaultTriggerProps {\n  onClick: () => void;\n  workspace: Workspace;\n  className?: string;\n}\nconst DefaultTrigger = forwardRef<HTMLButtonElement, DefaultTriggerProps>(\n  ({workspace, className, onClick, ...other}, ref) => {\n    return (\n      <ButtonBase\n        ref={ref}\n        onClick={onClick}\n        className={clsx(\n          'flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2',\n          className,\n        )}\n        {...other}\n      >\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\n            {workspace.default ? (\n              <Trans message={workspace.name} />\n            ) : (\n              workspace.name\n            )}\n          </span>\n          <span className=\"block text-xs text-muted\">\n            {workspace.default ? (\n              <Trans message=\"Personal workspace\" />\n            ) : (\n              <Trans\n                message=\":count members\"\n                values={{count: workspace.members_count}}\n              />\n            )}\n          </span>\n        </span>\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\n      </ButtonBase>\n    );\n  },\n);\n\ninterface WorkspaceItemProps {\n  workspace: Workspace;\n  onChange: WorkspaceSelectorProps['onChange'];\n  setSelectorIsOpen: (value: boolean) => void;\n}\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen,\n}: WorkspaceItemProps) {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n\n  return (\n    <div\n      onClick={() => {\n        setWorkspaceId(workspace.id);\n        onChange?.(workspace.id);\n        setSelectorIsOpen(false);\n      }}\n      className={clsx(\n        'mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left',\n        isActive && 'bg-primary/5',\n        !isActive && 'hover:bg-hover',\n      )}\n    >\n      <CheckIcon\n        size=\"sm\"\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-sm text-muted\">\n          {workspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: workspace.members_count}}\n            />\n          )}\n        </div>\n      </div>\n      {workspace.id !== 0 && (\n        <ManageButton\n          setSelectorIsOpen={setSelectorIsOpen}\n          workspace={workspace}\n          onChange={onChange}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface LeaveWorkspaceDialogProps {\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction LeaveWorkspaceDialog({\n  workspace,\n  onChange,\n}: LeaveWorkspaceDialogProps) {\n  const removeMember = useRemoveMember();\n  const {user} = useAuth();\n  const {close} = useDialogContext();\n  return (\n    <LeaveWorkspaceConfirmation\n      isLoading={removeMember.isPending}\n      onConfirm={() => {\n        removeMember.mutate(\n          {\n            workspaceId: workspace.id,\n            memberId: user!.id,\n            memberType: 'member',\n          },\n          {\n            onSuccess: () => {\n              close();\n              onChange?.(PersonalWorkspace.id);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n\ninterface DeleteWorkspaceConfirmationProps {\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n  onChange,\n}: DeleteWorkspaceConfirmationProps) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete workspace\" />}\n      body={\n        <Trans\n          message=\"Are you sure you want to delete “:name“?\"\n          values={{name: workspace.name}}\n        />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isLoading={deleteWorkspace.isPending}\n      onConfirm={() => {\n        deleteWorkspace.mutate(\n          {id: workspace.id},\n          {\n            onSuccess: () => {\n              close();\n              onChange?.(PersonalWorkspace.id);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n\ninterface ManageButtonProps {\n  setSelectorIsOpen: (value: boolean) => void;\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  workspace,\n  onChange,\n}: ManageButtonProps) {\n  const {user} = useAuth();\n\n  return (\n    <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\n      <Button\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        color=\"primary\"\n        size=\"xs\"\n        variant=\"outline\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem\n          onClick={e => {\n            e.stopPropagation();\n            openDialog(WorkspaceMembersDialog, {workspace});\n          }}\n          value=\"workspaceMembers\"\n          startIcon={<PersonAddIcon />}\n        >\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(RenameWorkspaceDialog, {workspace});\n            }}\n            value=\"updateWorkspace\"\n            startIcon={<EditIcon />}\n          >\n            <Trans message=\"Rename\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id !== user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(LeaveWorkspaceDialog, {workspace, onChange});\n            }}\n            value=\"leaveWorkspace\"\n            startIcon={<ExitToAppIcon />}\n          >\n            <Trans message=\"Leave\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(DeleteWorkspaceConfirmation, {workspace, onChange});\n            }}\n            value=\"deleteWorkspace\"\n            startIcon={<DeleteIcon />}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        )}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\nimport {Button} from '@common/ui/buttons/button';\nimport {UnfoldMoreIcon} from '@common/icons/material/UnfoldMore';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {Workspace} from '@common/workspace/types/workspace';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {reloadAccountUsage} from '@app/editor/use-account-usage';\n\ninterface Props {\n  className?: string;\n}\nexport function DashboardWorkspaceSelector({className}: Props) {\n  const workspace = useActiveWorkspace();\n  return (\n    <div className={className}>\n      <WorkspaceSelector\n        onChange={() => reloadAccountUsage()}\n        placement=\"bottom\"\n        trigger={\n          <Button\n            variant=\"outline\"\n            className=\"min-w-[188px]\"\n            justify=\"justify-between\"\n            endIcon={<UnfoldMoreIcon />}\n          >\n            <Label workspace={workspace} />\n          </Button>\n        }\n      />\n    </div>\n  );\n}\n\ninterface LabelProps {\n  workspace?: Workspace | null;\n}\nfunction Label({workspace}: LabelProps) {\n  if (!workspace) {\n    return <Skeleton />;\n  }\n\n  if (workspace.default) {\n    return <Trans message=\"Default workspace\" />;\n  }\n\n  return workspace.name;\n}\n","import {useAuth} from '../../auth/use-auth';\nimport {memo, useEffect, useId, useMemo, useRef} from 'react';\nimport lazyLoader from '../../utils/http/lazy-loader';\nimport clsx from 'clsx';\nimport {useSettings} from '../../core/settings/use-settings';\nimport dot from 'dot-object';\nimport {Settings} from '@common/core/settings/settings';\nimport {getScrollParent} from '@react-aria/utils';\n\ninterface AdHostProps {\n  slot: keyof Omit<NonNullable<Settings['ads']>, 'disable'>;\n  className?: string;\n}\nexport function AdHost({slot, className}: AdHostProps) {\n  const settings = useSettings();\n  const {isSubscribed} = useAuth();\n  const adCode = useMemo(() => {\n    return dot.pick(`ads.${slot}`, settings);\n  }, [slot, settings]);\n\n  if (settings.ads?.disable || isSubscribed || !adCode) return null;\n\n  return <InvariantAd className={className} slot={slot} adCode={adCode} />;\n}\n\ninterface InvariantAdProps {\n  slot: string;\n  adCode: string;\n  className?: string;\n}\nconst InvariantAd = memo(\n  ({slot, adCode, className}: InvariantAdProps) => {\n    const ref = useRef<HTMLDivElement>(null);\n\n    const id = useId();\n\n    useEffect(() => {\n      if (ref.current) {\n        loadAdScripts(adCode, ref.current).then(() => {\n          executeAdJavascript(adCode, id);\n        });\n      }\n      return () => {\n        // @ts-ignore\n        delete window['google_ad_modifications'];\n      };\n    }, [adCode, id]);\n\n    // remove height modifications added by adsense\n    useEffect(() => {\n      if (ref.current) {\n        const scrollParent = getScrollParent(ref.current) as HTMLElement;\n        if (scrollParent) {\n          const observer = new MutationObserver(function () {\n            scrollParent.style.height = '';\n            scrollParent.style.minHeight = '';\n          });\n          observer.observe(scrollParent, {\n            attributes: true,\n            attributeFilter: ['style'],\n          });\n          return () => observer.disconnect();\n        }\n      }\n    }, []);\n\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={clsx(\n          'ad-host flex max-h-[600px] min-h-90 w-full max-w-full items-center justify-center overflow-hidden',\n          `${slot.replace(/\\./g, '-')}-host`,\n          className,\n        )}\n        dangerouslySetInnerHTML={{__html: getAdHtml(adCode)}}\n      ></div>\n    );\n  },\n  () => {\n    // never re-render\n    return false;\n  },\n);\n\nfunction getAdHtml(adCode: string) {\n  // strip out all script tags from ad code and leave only html\n  return adCode\n    ?.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    .trim();\n}\n\n// Load any external scripts needed by ad.\nfunction loadAdScripts(adCode: string, parentEl: HTMLDivElement): Promise<any> {\n  const promises = [];\n\n  // load ad code script\n  const pattern = /<script.*?src=['\"](.*?)['\"]/g;\n  let match;\n\n  while ((match = pattern.exec(adCode))) {\n    if (match[1]) {\n      promises.push(lazyLoader.loadAsset(match[1], {type: 'js', parentEl}));\n    }\n  }\n\n  return Promise.all(promises);\n}\n\n// Execute ad code javascript and replace document.write if needed.\nfunction executeAdJavascript(adCode: string, id: string) {\n  // find any ad code javascript that needs to be executed\n  const pattern = /<script\\b[^>]*>([\\s\\S]*?)<\\/script>/g;\n  let content;\n\n  while ((content = pattern.exec(adCode))) {\n    if (content[1]) {\n      const r = `var d = document.createElement('div'); d.innerHTML = $1; document.getElementById('${id}').appendChild(d.firstChild);`;\n      const toEval = content[1].replace(/document.write\\((.+?)\\);/, r);\n      eval(toEval);\n    }\n  }\n}\n","import {useProjects} from '@app/dashboard/use-projects';\nimport {useAuth} from '@common/auth/use-auth';\nimport {getProjectImageUrl, ProjectLink} from '@app/projects/project-link';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {Link} from 'react-router-dom';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {Project} from '@app/dashboard/project';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport React, {Fragment, ReactNode, useState} from 'react';\nimport {useDeleteProject} from '@app/projects/use-delete-project';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {ProjectSettingsDialog} from '@app/projects/project-settings-dialog/project-settings-dialog';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Footer} from '@common/ui/footer/footer';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport builderImage from '@app/templates/website-builder.svg';\nimport {DashboardNavbar} from './dashboard-navbar';\nimport {DashboardWorkspaceSelector} from '@app/dashboard/dashboard-workspace-selector';\nimport {PolicyFailMessage} from '@common/billing/upgrade/policy-fail-message';\nimport {useAccountUsage} from '@app/editor/use-account-usage';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\n\nconst SortOptions = [\n  {value: 'created_at|desc', label: message('Date created')},\n  {value: 'name|asc', label: message('Alphabetical')},\n  {value: 'updated_at|desc', label: message('Last updated')},\n];\n\nexport function DashboardPage() {\n  const {data: usage} = useAccountUsage();\n  const {trans} = useTrans();\n  const {user} = useAuth();\n  const query = useProjects({userId: user!.id, paginate: 'lengthAware'});\n  const {sortDescriptor, setSortDescriptor, searchQuery, setSearchQuery} =\n    query;\n  const sortValue = `${sortDescriptor.orderBy}|${sortDescriptor.orderDir}`;\n\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Dashboard\" />\n      </StaticPageTitle>\n      <div className=\"flex h-screen flex-col overflow-y-scroll\">\n        <DashboardNavbar />\n        <div className=\"container mx-auto flex-auto px-12\">\n          {usage?.projects.create.allowed === false && (\n            <PolicyFailMessage\n              className=\"mt-24 text-center\"\n              resourceName={<Trans message=\"sites\" />}\n            />\n          )}\n          <div className=\"flex items-center gap-12 py-36\">\n            <DashboardWorkspaceSelector className=\"mr-auto\" />\n            <TextField\n              size=\"sm\"\n              placeholder={trans(message('Search sites...'))}\n              startAdornment={<SearchIcon />}\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n            />\n            <MenuTrigger\n              selectionMode=\"single\"\n              selectedValue={sortValue}\n              onItemSelected={newValue => {\n                const [orderBy, orderDir] = (newValue as string).split('|');\n                setSortDescriptor({\n                  orderBy,\n                  orderDir: orderDir as 'asc' | 'desc',\n                });\n              }}\n            >\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                endIcon={<KeyboardArrowDownIcon />}\n              >\n                {\n                  <Trans\n                    {...SortOptions.find(option => option.value === sortValue)!\n                      .label}\n                  />\n                }\n              </Button>\n              <Menu>\n                {SortOptions.map(option => (\n                  <Item key={option.value} value={option.value}>\n                    <Trans {...option.label} />\n                  </Item>\n                ))}\n              </Menu>\n            </MenuTrigger>\n            <Button\n              size=\"sm\"\n              variant=\"flat\"\n              color=\"primary\"\n              elementType={Link}\n              to=\"templates\"\n              startIcon={<AddIcon />}\n              disabled={!usage?.projects.create.allowed}\n            >\n              <Trans message=\"New site\" />\n            </Button>\n          </div>\n          <AdHost slot=\"dashboard_top\" className=\"mb-36\" />\n          <AnimatePresence initial={false} mode=\"wait\">\n            <ProjectGrid query={query} />\n          </AnimatePresence>\n          <AdHost slot=\"dashboard_bottom\" className=\"mt-36\" />\n        </div>\n        <Footer className=\"mt-40 px-40\" />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface ProjectGridProps {\n  query: ReturnType<typeof useProjects>;\n}\n\nfunction ProjectGrid({query}: ProjectGridProps) {\n  if (query.data) {\n    if (query.noResults) {\n      return <NoProjectsMessage isSearching={!!query.searchQuery} />;\n    }\n    return (\n      <div>\n        <GridLayout animationKey=\"projects\">\n          {query.items.map(project => (\n            <div key={project.id} className=\"rounded-panel border shadow\">\n              <div className=\"group relative\">\n                <img\n                  className=\"aspect-video w-full\"\n                  src={getProjectImageUrl(project)}\n                  alt=\"\"\n                />\n                <div className=\"absolute left-0 top-0 hidden h-full w-full items-center justify-center bg-white/70 group-hover:flex\">\n                  <Button\n                    variant=\"flat\"\n                    color=\"primary\"\n                    endIcon={<KeyboardArrowRightIcon />}\n                    elementType={Link}\n                    to={`/editor/${project.id}`}\n                  >\n                    <Trans message=\"Open editor\" />\n                  </Button>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-6 p-20\">\n                <div className=\"flex-auto\">\n                  <div className=\"font-bold\">{project.name}</div>\n                  <div className=\"text-sm text-muted\">\n                    <ProjectLink project={project} />\n                  </div>\n                  <div className=\"mt-4 text-xs text-muted\">\n                    <FormattedRelativeTime date={project.updated_at} />\n                  </div>\n                </div>\n                <OptionsTrigger project={project} />\n              </div>\n            </div>\n          ))}\n        </GridLayout>\n        <InfiniteScrollSentinel query={query} />\n      </div>\n    );\n  }\n\n  if (query.isLoading) {\n    return (\n      <GridLayout animationKey=\"skeletons\">\n        {[...Array(6)].map((_, index) => (\n          <Skeleton key={index} variant=\"rect\" size=\"h-[310px]\" />\n        ))}\n      </GridLayout>\n    );\n  }\n\n  return null;\n}\n\ninterface GridLayoutProps {\n  children: ReactNode;\n  animationKey: string;\n}\n\nfunction GridLayout({children, animationKey}: GridLayoutProps) {\n  return (\n    <m.div\n      key={animationKey}\n      {...opacityAnimation}\n      className=\"grid grid-cols-1 gap-12 md:grid-cols-3\"\n    >\n      {children}\n    </m.div>\n  );\n}\n\ninterface NoProjectsMessageProps {\n  isSearching: boolean;\n}\nfunction NoProjectsMessage({isSearching}: NoProjectsMessageProps) {\n  return (\n    <IllustratedMessage\n      className=\"mt-40\"\n      title={<Trans message=\"No sites\" />}\n      description={\n        isSearching ? (\n          <Trans message=\"No sites match your search query\" />\n        ) : (\n          <Trans message=\"You have not created any sites yet\" />\n        )\n      }\n      image={<SvgImage src={builderImage} />}\n    />\n  );\n}\n\ninterface OptionsTriggerProps {\n  project: Project;\n}\nfunction OptionsTrigger({project}: OptionsTriggerProps) {\n  const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\n\n  return (\n    <Fragment>\n      <MenuTrigger>\n        <IconButton className=\"text-muted\">\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <Item value=\"edit\" to={`/editor/${project.id}`} elementType={Link}>\n            <Trans message=\"Edit\" />\n          </Item>\n          <Item value=\"preview\">\n            <Trans message=\"Preview\" />\n          </Item>\n          <Item\n            value=\"settings\"\n            onSelected={() => openDialog(ProjectSettingsDialog, {project})}\n          >\n            <Trans message=\"Settings\" />\n          </Item>\n          <Item value=\"delete\" onSelected={() => setDeleteDialogIsOpen(true)}>\n            <Trans message=\"Delete\" />\n          </Item>\n        </Menu>\n      </MenuTrigger>\n      <DeleteProjectDialog\n        isOpen={deleteDialogIsOpen}\n        onClose={() => setDeleteDialogIsOpen(false)}\n        projectId={project.id}\n      />\n    </Fragment>\n  );\n}\n\ninterface DeleteProjectProps {\n  projectId: string | number;\n  isOpen: boolean;\n  onClose: () => void;\n}\nfunction DeleteProjectDialog({projectId, isOpen, onClose}: DeleteProjectProps) {\n  const deleteProject = useDeleteProject();\n  return (\n    <DialogTrigger type=\"modal\" isOpen={isOpen} onClose={onClose}>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete project\" />}\n        body={<Trans message=\"Are you sure you want to delete this project?\" />}\n        confirm={<Trans message=\"Delete\" />}\n        isLoading={deleteProject.isPending}\n        onConfirm={() => {\n          deleteProject.mutate(\n            {projectId},\n            {\n              onSuccess: () => {\n                onClose();\n              },\n            },\n          );\n        }}\n      />\n    </DialogTrigger>\n  );\n}\n","import {m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {forwardRef, Fragment, ReactNode} from 'react';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n  animationKey?: string;\n}\nexport function TemplateGridLayout({className, children, animationKey}: Props) {\n  return (\n    <m.div\n      key={animationKey}\n      className={clsx('grid grid-cols-1 gap-20 md:grid-cols-3', className)}\n      {...opacityAnimation}\n    >\n      {children}\n    </m.div>\n  );\n}\n\ninterface TemplateGridItemLayoutProps {\n  children: ReactNode;\n  label: ReactNode;\n  className?: string;\n}\nexport const TemplateGridItemLayout = forwardRef<\n  HTMLDivElement,\n  TemplateGridItemLayoutProps\n>(({children, label, className}, ref) => (\n  <div\n    ref={ref}\n    className={clsx(\n      'overflow-hidden rounded-panel border border-transparent shadow-md',\n      className,\n    )}\n  >\n    {children}\n    <div className=\"mt-4 flex items-center justify-center p-12 text-sm font-semibold capitalize\">\n      {label}\n    </div>\n  </div>\n));\n\nexport function TemplateGridSkeletons() {\n  return (\n    <Fragment>\n      {[...Array(9)].map((_, i) => (\n        <TemplateGridItemLayout key={i} label={<Skeleton />}>\n          <Skeleton variant=\"rect\" size=\"aspect-[365/228]\" />\n        </TemplateGridItemLayout>\n      ))}\n    </Fragment>\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {\n  CreateProjectPayload,\n  useCreateProject,\n} from '@app/projects/use-create-project';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Props {\n  templateName?: string;\n}\nexport function NewProjectDialog({templateName}: Props) {\n  const {formId, close} = useDialogContext();\n  const navigate = useNavigate();\n  const form = useForm<CreateProjectPayload>({\n    defaultValues: {\n      templateName,\n    },\n  });\n  const createProject = useCreateProject(form);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create new site\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values =>\n            createProject.mutate(values, {\n              onSuccess: response => {\n                close();\n                navigate(`/editor/${response.project.model.id}`, {\n                  replace: true,\n                });\n              },\n            })\n          }\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            autoFocus\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createProject.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {useTemplates} from '@app/templates/use-templates';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {Select} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {Button} from '@common/ui/buttons/button';\nimport {Footer} from '@common/ui/footer/footer';\nimport React, {useState} from 'react';\nimport {AnimatePresence} from 'framer-motion';\nimport {\n  TemplateGridItemLayout,\n  TemplateGridLayout,\n  TemplateGridSkeletons,\n} from '@app/templates/template-grid-layout';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {BuilderTemplate} from '@app/templates/builder-template';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport websiteBuilderImage from '@app/templates/website-builder.svg';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {NewProjectDialog} from '@app/projects/new-project-dialog';\nimport {DashboardNavbar} from '@app/dashboard/dashboard-navbar';\nimport {Link} from 'react-router-dom';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\n\nexport function NewProjectPage() {\n  return (\n    <div>\n      <StaticPageTitle>\n        <Trans message=\"New site\" />\n      </StaticPageTitle>\n      <DashboardNavbar />\n      <div className=\"container mx-auto mt-40 px-20\">\n        <div>\n          <h1 className=\"text-3xl font-medium\">\n            <Trans message=\"Choose a template for your project\" />\n          </h1>\n          <p className=\"mt-2 text-muted\">\n            <Trans message=\"All templates are 100% customizable so choose one then make it your own.\" />\n          </p>\n        </div>\n        <TemplateForm />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nfunction TemplateForm() {\n  const {trans} = useTrans();\n  const {builder} = useSettings();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const query = useTemplates({category: selectedCategory, perPage: 24});\n  return (\n    <div className=\"mt-20 md:mt-40\">\n      <section className=\"items-center justify-between gap-12 md:flex\">\n        <div className=\"flex-auto items-center gap-12 md:flex\">\n          <TextField\n            placeholder={trans(message('Search...'))}\n            startAdornment={<SearchIcon />}\n            className=\"min-w-288 max-md:mb-12\"\n            value={query.searchQuery}\n            onChange={e => query.setSearchQuery(e.target.value)}\n            endAdornment={\n              query.isReloading &&\n              query.searchQuery && <ProgressCircle isIndeterminate size=\"xs\" />\n            }\n          />\n          <Select\n            selectionMode=\"single\"\n            name=\"category\"\n            className=\"min-w-288 max-md:mb-12\"\n            floatingWidth=\"matchTrigger\"\n            selectedValue={selectedCategory}\n            onItemSelected={value => setSelectedCategory(value as string)}\n          >\n            <Item value=\"\">\n              <Trans message=\"All categories\" />\n            </Item>\n            {builder?.template_categories?.map(category => (\n              <Item key={category} value={category}>\n                <Trans message={category} />\n              </Item>\n            ))}\n          </Select>\n        </div>\n        <DialogTrigger type=\"modal\">\n          <Button variant=\"flat\" color=\"primary\" className=\"min-h-42\">\n            <Trans message=\"Start with blank page\" />\n          </Button>\n          <NewProjectDialog />\n        </DialogTrigger>\n      </section>\n      <div className=\"my-20 min-h-440\">\n        <AnimatePresence initial={false} mode=\"wait\">\n          <TemplateGrid query={query} />\n        </AnimatePresence>\n        {query.items.length && <InfiniteScrollSentinel query={query} />}\n      </div>\n    </div>\n  );\n}\n\ninterface TemplateGridProps {\n  query: UseInfiniteDataResult<BuilderTemplate>;\n}\nfunction TemplateGrid({\n  query: {items, isLoading, isReloading, noResults},\n}: TemplateGridProps) {\n  if (items.length) {\n    return (\n      <TemplateGridLayout animationKey=\"templates\">\n        {items.map(template => (\n          <TemplateGridItemLayout\n            key={template.name}\n            label={template.name.replace(/-/g, ' ')}\n            className=\"group\"\n          >\n            <div className=\"relative cursor-pointer\">\n              <img\n                className=\"aspect-[365/228] w-full object-cover\"\n                src={template.thumbnail}\n                alt=\"\"\n              />\n              <div className=\"absolute inset-0 hidden flex-col items-center justify-center gap-16 bg-white/90 group-hover:flex\">\n                <Button\n                  variant=\"outline\"\n                  color=\"primary\"\n                  className=\"min-w-124\"\n                  elementType={Link}\n                  to={template.name}\n                >\n                  <Trans message=\"View\" />\n                </Button>\n                <DialogTrigger type=\"modal\" key={template.name}>\n                  <Button variant=\"flat\" color=\"primary\" className=\"min-w-124\">\n                    <Trans message=\"Select\" />\n                  </Button>\n                  <NewProjectDialog templateName={template.name} />\n                </DialogTrigger>\n              </div>\n            </div>\n          </TemplateGridItemLayout>\n        ))}\n      </TemplateGridLayout>\n    );\n  }\n\n  if (isLoading && !isReloading) {\n    return (\n      <TemplateGridLayout animationKey=\"skeletons\">\n        <TemplateGridSkeletons />\n      </TemplateGridLayout>\n    );\n  }\n\n  if (noResults) {\n    return (\n      <IllustratedMessage\n        className=\"my-80\"\n        size=\"sm\"\n        title={<Trans message=\"No matching templates\" />}\n        description={<Trans message=\"Try another search query or category\" />}\n        image={<SvgImage src={websiteBuilderImage} />}\n      />\n    );\n  }\n\n  return <PageErrorMessage />;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {CustomDomain} from '@common/custom-domains/custom-domain';\n\ninterface Response extends BackendResponse {\n  domain: CustomDomain;\n}\n\ninterface Payload {\n  domainId: number | string;\n  host?: string;\n  global?: boolean;\n  resource_id?: number | null;\n  resource_type?: string | null;\n}\n\nexport function useUpdateDomain() {\n  return useMutation({\n    mutationFn: (props: Payload) => updateDomain(props),\n    onSuccess: (response, props) => {\n      return queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('custom-domain'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateDomain(payload: Payload): Promise<Response> {\n  return apiClient\n    .put(`custom-domain/${payload.domainId}`, payload)\n    .then(r => r.data);\n}\n","import {Trans} from '@common/i18n/trans';\nimport {Footer} from '@common/ui/footer/footer';\nimport React from 'react';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {ConnectDomainDialog} from '@common/custom-domains/datatable/connect-domain-dialog/connect-domain-dialog';\nimport {useCustomDomains} from '@common/custom-domains/use-custom-domains';\nimport {useAuth} from '@common/auth/use-auth';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport worldImage from '@common/custom-domains/datatable/world.svg';\nimport {PageStatus} from '@common/http/page-status';\nimport {CustomDomain} from '@common/custom-domains/custom-domain';\nimport {removeProtocol} from '@common/utils/urls/remove-protocol';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteDomain} from '@common/custom-domains/datatable/requests/use-delete-domain';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {useProjects} from '@app/dashboard/use-projects';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {getProjectImageUrl} from '@app/projects/project-link';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {useUpdateDomain} from '@common/custom-domains/datatable/requests/use-update-domain';\nimport {Project} from '@app/dashboard/project';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {DashboardNavbar} from '@app/dashboard/dashboard-navbar';\nimport {DashboardWorkspaceSelector} from '@app/dashboard/dashboard-workspace-selector';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {reloadAccountUsage} from '@app/editor/use-account-usage';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\n\nexport function CustomDomainsPage() {\n  return (\n    <div className=\"flex h-screen flex-col\">\n      <StaticPageTitle>\n        <Trans message=\"Branded domains\" />\n      </StaticPageTitle>\n      <DashboardNavbar />\n      <div className=\"container mx-auto mt-40 flex-auto px-20\">\n        <div>\n          <div className=\"flex items-center gap-14\">\n            <h1 className=\"mr-auto text-3xl font-medium\">\n              <Trans message=\"Branded domains\" />\n            </h1>\n            <DashboardWorkspaceSelector />\n          </div>\n          <p className=\"text-muted\">\n            <Trans message=\"Connect and manage your own custom domains.\" />\n          </p>\n        </div>\n        <Content />\n      </div>\n      <Footer className=\"px-40\" />\n    </div>\n  );\n}\n\nfunction Content() {\n  const {user} = useAuth();\n  const {workspaceId} = useActiveWorkspaceId();\n  const query = useCustomDomains<Project>({\n    userId: user!.id,\n    perPage: 40,\n    with: 'resource.user',\n    workspaceId,\n  });\n  const showNoResultsMessage = query.data?.pagination.data.length === 0;\n  return (\n    <div className=\"mt-20 flex-auto\">\n      <DialogTrigger\n        type=\"modal\"\n        onClose={newDomain => {\n          if (newDomain) {\n            reloadAccountUsage();\n          }\n        }}\n      >\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n        >\n          <Trans message=\"Connect domain\" />\n        </Button>\n        <ConnectDomainDialog />\n      </DialogTrigger>\n      <div className=\"mt-34\">\n        {showNoResultsMessage && <NoDomainsMessage />}\n        {query.data ? (\n          <DomainList domains={query.data.pagination.data} />\n        ) : (\n          <PageStatus query={query} loaderIsScreen={false} />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface DomainListProps {\n  domains: CustomDomain<Project>[];\n}\nfunction DomainList({domains}: DomainListProps) {\n  return (\n    <div>\n      {domains.map(domain => (\n        <div key={domain.id} className=\"rounded-panel border p-16\">\n          <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap font-bold\">\n            {removeProtocol(domain.host)}\n          </div>\n          <div className=\"mb-20 text-sm text-muted\">\n            {domain.resource ? (\n              <div className=\"mt-4 flex items-center gap-8\">\n                <img\n                  className=\"h-24 w-24 rounded object-cover\"\n                  src={getProjectImageUrl(domain.resource)}\n                  alt=\"\"\n                />\n                <div>{domain.resource?.name}</div>\n              </div>\n            ) : (\n              <Trans message=\"This domain is not connected to any project yet.\" />\n            )}\n          </div>\n          <div className=\"flex items-center gap-10\">\n            <ProjectSelectorButton domain={domain} />\n            <RemoveDomainButton domain={domain} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface ProjectSelectorButtonProps {\n  domain: CustomDomain<Project>;\n}\nfunction ProjectSelectorButton({domain}: ProjectSelectorButtonProps) {\n  const {trans} = useTrans();\n  const {user} = useAuth();\n  const {items} = useProjects({userId: user!.id, published: 'true'});\n  const updateDomain = useUpdateDomain();\n\n  const handleDomainChange = (projectId: number | null) => {\n    const projectName = items.find(p => p.id === projectId)?.name;\n    if (projectId) {\n      toast.positive(\n        trans(\n          message('Connected “:domain” to  “:name”', {\n            values: {\n              domain: removeProtocol(domain.host),\n              name: projectName,\n            },\n          }),\n        ),\n      );\n    }\n  };\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={domain.resource?.id ?? ''}\n      onItemSelected={projectId => {\n        updateDomain.mutate(\n          {\n            domainId: domain.id,\n            resource_id: projectId ? (projectId as number) : null,\n            resource_type: projectId ? 'project' : null,\n          },\n          {\n            onSuccess: () => handleDomainChange(projectId as number),\n          },\n        );\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        size=\"xs\"\n        endIcon={<KeyboardArrowDownIcon />}\n        disabled={updateDomain.isPending}\n      >\n        <Trans message=\"Change project\" />\n      </Button>\n      <Menu>\n        <Item value=\"\">\n          <Trans message=\"No project\" />\n        </Item>\n        {items.map(project => (\n          <Item\n            value={project.id}\n            key={project.id}\n            startIcon={\n              <img\n                className=\"h-24 w-24 object-cover\"\n                src={getProjectImageUrl(project)}\n                alt=\"\"\n              />\n            }\n          >\n            {project.name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface RemoveDomainButtonProps {\n  domain: CustomDomain;\n}\nfunction RemoveDomainButton({domain}: RemoveDomainButtonProps) {\n  const deleteDomain = useDeleteDomain();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"outline\" size=\"xs\" color=\"danger\">\n        <Trans message=\"Remove\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        isLoading={deleteDomain.isPending}\n        title={<Trans message=\"Remove domain?\" />}\n        body={<Trans message=\"Are you sure you want to remove this domain?\" />}\n        confirm={<Trans message=\"Remove\" />}\n        onConfirm={() => {\n          deleteDomain.mutate(\n            {domain},\n            {onSuccess: () => reloadAccountUsage()},\n          );\n        }}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction NoDomainsMessage() {\n  return (\n    <IllustratedMessage\n      title={<Trans message=\"No domains\" />}\n      description={<Trans message=\"You have not connected any domains yet\" />}\n      image={<SvgImage src={worldImage} />}\n    />\n  );\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {Link, useParams} from 'react-router-dom';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {KeyboardBackspaceIcon} from '@common/icons/material/KeyboardBackspace';\nimport {Logo} from '@common/ui/navigation/navbar/logo';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {PhoneIphoneIcon} from '@common/icons/material/PhoneIphone';\nimport {DesktopMacIcon} from '@common/icons/material/DesktopMac';\nimport {useState} from 'react';\nimport clsx from 'clsx';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {NewProjectDialog} from '@app/projects/new-project-dialog';\nimport {useTemplate} from '@app/templates/use-template';\nimport {BuilderTemplate} from '@app/templates/builder-template';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\n\nexport function TemplatePreviewPage() {\n  const {base_url} = useSettings();\n  const {name} = useParams();\n  const [selectedBreakpoint, setSelectedBreakpoint] = useState<\n    'mobile' | 'desktop'\n  >('desktop');\n  const {data} = useTemplate(name!);\n\n  return (\n    <div className=\"flex h-screen w-screen flex-col\">\n      <Header\n        selectedBreakpoint={selectedBreakpoint}\n        onBreakpointChange={setSelectedBreakpoint}\n        template={data?.template}\n      />\n      <div\n        className={clsx(\n          'flex flex-auto items-center justify-center',\n          selectedBreakpoint === 'mobile' && 'my-40',\n        )}\n      >\n        {data?.template ? (\n          <iframe\n            className={clsx(\n              'transition-size',\n              selectedBreakpoint === 'mobile'\n                ? 'h-[844px] w-[390px] overflow-hidden rounded-[64px] border-[12px] border-[#444546] shadow-lg'\n                : 'h-full w-full',\n            )}\n            src={`${base_url}/templates/preview/${data.template.name}`}\n          />\n        ) : (\n          <FullPageLoader />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface HeaderProps {\n  selectedBreakpoint: 'mobile' | 'desktop';\n  onBreakpointChange: (breakpoint: 'mobile' | 'desktop') => void;\n  template: BuilderTemplate | undefined;\n}\nfunction Header({\n  selectedBreakpoint,\n  onBreakpointChange,\n  template,\n}: HeaderProps) {\n  return (\n    <header className=\"flex min-w-0 items-center gap-12 overflow-hidden bg px-12 py-16 shadow-[0,2px,18px,0,rgba(129,162,182,.2)] md:px-32\">\n      <Logo color=\"bg\" logoColor=\"dark\" className=\"max-md:hidden\" />\n      <Button\n        startIcon={<KeyboardBackspaceIcon />}\n        elementType={Link}\n        to=\"/dashboard/templates\"\n      >\n        <Trans message=\"Back to templates\" />\n      </Button>\n      <IconButton\n        className=\"ml-auto max-md:hidden\"\n        color={selectedBreakpoint === 'mobile' ? 'primary' : undefined}\n        onClick={() => onBreakpointChange('mobile')}\n      >\n        <PhoneIphoneIcon />\n      </IconButton>\n      <IconButton\n        className=\"max-md:hidden\"\n        color={selectedBreakpoint === 'desktop' ? 'primary' : undefined}\n        onClick={() => onBreakpointChange('desktop')}\n      >\n        <DesktopMacIcon />\n      </IconButton>\n      <DialogTrigger type=\"modal\">\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"ml-auto\"\n          disabled={!template}\n        >\n          <Trans message=\"Use this template\" />\n        </Button>\n        <NewProjectDialog templateName={template?.name} />\n      </DialogTrigger>\n    </header>\n  );\n}\n","import {Outlet, RouteObject, useRoutes} from 'react-router-dom';\nimport React from 'react';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport {DashboardPage} from '@app/dashboard/dashboard-page';\nimport {NewProjectPage} from '@app/dashboard/new-project-page';\nimport {CustomDomainsPage} from '@app/dashboard/custom-domains-page';\nimport {TemplatePreviewPage} from '@app/dashboard/template-preview-page';\nimport {ActiveWorkspaceProvider} from '@common/workspace/active-workspace-id-context';\n\nexport default function DashboardRoutes() {\n  const DashboardRouteConfig: RouteObject[] = [\n    {\n      path: '',\n      element: (\n        <ActiveWorkspaceProvider>\n          <Outlet />\n        </ActiveWorkspaceProvider>\n      ),\n      children: [\n        {\n          path: '/',\n          element: <DashboardPage />,\n        },\n        {\n          path: '/domains',\n          element: <CustomDomainsPage />,\n        },\n        {\n          path: '/templates',\n          element: <NewProjectPage />,\n        },\n        {\n          path: '/templates/:name',\n          element: <TemplatePreviewPage />,\n        },\n        {path: '*', element: <NotFoundPage />},\n      ],\n    },\n  ];\n\n  return useRoutes(DashboardRouteConfig);\n}\n"],"names":["params","workspaceId","isInitialLoading","fetchNextPage","isFetchingNextPage","hasNextPage","children","loaderMarginTop","style","className","_variant","loadMoreExtraContent","size","sentinelRef","useRef","isLoading","loadMoreClickCount","setLoadMoreClickCount","useState","innerVariant","useEffect","sentinelEl","observer","entry","content","jsxs","jsx","trans","payload","err","projectId","r","billing","form","props","formId","close","createWorkspace","response","other","inviteId","string","member","modelType","memberId","memberType","endpoint","setWorkspaceId","user","onConfirm","workspace","data","can","members","shouldHideOtherMembers","authUser","permissions","authMember","_a","mb","permission","p","selectedRole","setSelectedRole","changeRole","isOwner","isCurrentUser","roleSelector","roleId","Fragment","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","invalid","type","removeMember","isConfirmed","value","onChange","isDisabled","role","newValue","MenuItem","resendInvite","id","updateWorkspace","trigger","placement","workspaces","isFetched","isFetching","activeWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","e","forwardRef","ref","isActive","deleteWorkspace","slot","settings","isSubscribed","adCode","useMemo","memo","useId","scrollParent","getScrollParent","parentEl","promises","pattern","match","usage","query","sortDescriptor","setSortDescriptor","searchQuery","setSearchQuery","sortValue","orderBy","orderDir","option","project","_","index","animationKey","isSearching","deleteDialogIsOpen","setDeleteDialogIsOpen","isOpen","onClose","deleteProject","label","i","templateName","navigate","createProject","values","builder","selectedCategory","setSelectedCategory","Select","category","items","isReloading","noResults","template","websiteBuilderImage","showNoResultsMessage","newDomain","domains","domain","updateDomain","handleDomainChange","projectName","deleteDomain","worldImage","base_url","name","selectedBreakpoint","setSelectedBreakpoint","onBreakpointChange"],"mappings":"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"}